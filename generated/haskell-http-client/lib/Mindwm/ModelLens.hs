{-
   Mindwm API

   This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads

   OpenAPI Version: 3.1.0
   Mindwm API API version: 0.1.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Mindwm.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Mindwm.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Mindwm.Model
import Mindwm.Core


-- * Clipboard

-- | 'clipboardType' Lens
clipboardTypeL :: Lens_' Clipboard (Maybe Text)
clipboardTypeL f Clipboard{..} = (\clipboardType -> Clipboard { clipboardType, ..} ) <$> f clipboardType
{-# INLINE clipboardTypeL #-}

-- | 'clipboardSource' Lens
clipboardSourceL :: Lens_' Clipboard (Maybe Text)
clipboardSourceL f Clipboard{..} = (\clipboardSource -> Clipboard { clipboardSource, ..} ) <$> f clipboardSource
{-# INLINE clipboardSourceL #-}

-- | 'clipboardData' Lens
clipboardDataL :: Lens_' Clipboard (Maybe ClipboardPayload)
clipboardDataL f Clipboard{..} = (\clipboardData -> Clipboard { clipboardData, ..} ) <$> f clipboardData
{-# INLINE clipboardDataL #-}

-- | 'clipboardId' Lens
clipboardIdL :: Lens_' Clipboard (Text)
clipboardIdL f Clipboard{..} = (\clipboardId -> Clipboard { clipboardId, ..} ) <$> f clipboardId
{-# INLINE clipboardIdL #-}

-- | 'clipboardSpecversion' Lens
clipboardSpecversionL :: Lens_' Clipboard (Text)
clipboardSpecversionL f Clipboard{..} = (\clipboardSpecversion -> Clipboard { clipboardSpecversion, ..} ) <$> f clipboardSpecversion
{-# INLINE clipboardSpecversionL #-}

-- | 'clipboardDatacontenttype' Lens
clipboardDatacontenttypeL :: Lens_' Clipboard (Maybe Text)
clipboardDatacontenttypeL f Clipboard{..} = (\clipboardDatacontenttype -> Clipboard { clipboardDatacontenttype, ..} ) <$> f clipboardDatacontenttype
{-# INLINE clipboardDatacontenttypeL #-}

-- | 'clipboardDataschema' Lens
clipboardDataschemaL :: Lens_' Clipboard (Maybe Text)
clipboardDataschemaL f Clipboard{..} = (\clipboardDataschema -> Clipboard { clipboardDataschema, ..} ) <$> f clipboardDataschema
{-# INLINE clipboardDataschemaL #-}

-- | 'clipboardSubject' Lens
clipboardSubjectL :: Lens_' Clipboard (Maybe Text)
clipboardSubjectL f Clipboard{..} = (\clipboardSubject -> Clipboard { clipboardSubject, ..} ) <$> f clipboardSubject
{-# INLINE clipboardSubjectL #-}

-- | 'clipboardTime' Lens
clipboardTimeL :: Lens_' Clipboard (Maybe DateTime)
clipboardTimeL f Clipboard{..} = (\clipboardTime -> Clipboard { clipboardTime, ..} ) <$> f clipboardTime
{-# INLINE clipboardTimeL #-}

-- | 'clipboardDataBase64' Lens
clipboardDataBase64L :: Lens_' Clipboard (Maybe Text)
clipboardDataBase64L f Clipboard{..} = (\clipboardDataBase64 -> Clipboard { clipboardDataBase64, ..} ) <$> f clipboardDataBase64
{-# INLINE clipboardDataBase64L #-}



-- * ClipboardPayload

-- | 'clipboardPayloadStart' Lens
clipboardPayloadStartL :: Lens_' ClipboardPayload (Maybe [Int])
clipboardPayloadStartL f ClipboardPayload{..} = (\clipboardPayloadStart -> ClipboardPayload { clipboardPayloadStart, ..} ) <$> f clipboardPayloadStart
{-# INLINE clipboardPayloadStartL #-}

-- | 'clipboardPayloadStop' Lens
clipboardPayloadStopL :: Lens_' ClipboardPayload (Maybe [Int])
clipboardPayloadStopL f ClipboardPayload{..} = (\clipboardPayloadStop -> ClipboardPayload { clipboardPayloadStop, ..} ) <$> f clipboardPayloadStop
{-# INLINE clipboardPayloadStopL #-}

-- | 'clipboardPayloadData' Lens
clipboardPayloadDataL :: Lens_' ClipboardPayload (Maybe Text)
clipboardPayloadDataL f ClipboardPayload{..} = (\clipboardPayloadData -> ClipboardPayload { clipboardPayloadData, ..} ) <$> f clipboardPayloadData
{-# INLINE clipboardPayloadDataL #-}

-- | 'clipboardPayloadType' Lens
clipboardPayloadTypeL :: Lens_' ClipboardPayload (Maybe E'Type)
clipboardPayloadTypeL f ClipboardPayload{..} = (\clipboardPayloadType -> ClipboardPayload { clipboardPayloadType, ..} ) <$> f clipboardPayloadType
{-# INLINE clipboardPayloadTypeL #-}

-- | 'clipboardPayloadContext' Lens
clipboardPayloadContextL :: Lens_' ClipboardPayload (Maybe ClipboardPayloadContext)
clipboardPayloadContextL f ClipboardPayload{..} = (\clipboardPayloadContext -> ClipboardPayload { clipboardPayloadContext, ..} ) <$> f clipboardPayloadContext
{-# INLINE clipboardPayloadContextL #-}



-- * ClipboardPayloadContext

-- | 'clipboardPayloadContextWindow' Lens
clipboardPayloadContextWindowL :: Lens_' ClipboardPayloadContext (Maybe Text)
clipboardPayloadContextWindowL f ClipboardPayloadContext{..} = (\clipboardPayloadContextWindow -> ClipboardPayloadContext { clipboardPayloadContextWindow, ..} ) <$> f clipboardPayloadContextWindow
{-# INLINE clipboardPayloadContextWindowL #-}



-- * CloudEvent

-- | 'cloudEventId' Lens
cloudEventIdL :: Lens_' CloudEvent (Text)
cloudEventIdL f CloudEvent{..} = (\cloudEventId -> CloudEvent { cloudEventId, ..} ) <$> f cloudEventId
{-# INLINE cloudEventIdL #-}

-- | 'cloudEventSource' Lens
cloudEventSourceL :: Lens_' CloudEvent (Text)
cloudEventSourceL f CloudEvent{..} = (\cloudEventSource -> CloudEvent { cloudEventSource, ..} ) <$> f cloudEventSource
{-# INLINE cloudEventSourceL #-}

-- | 'cloudEventSpecversion' Lens
cloudEventSpecversionL :: Lens_' CloudEvent (Text)
cloudEventSpecversionL f CloudEvent{..} = (\cloudEventSpecversion -> CloudEvent { cloudEventSpecversion, ..} ) <$> f cloudEventSpecversion
{-# INLINE cloudEventSpecversionL #-}

-- | 'cloudEventType' Lens
cloudEventTypeL :: Lens_' CloudEvent (Text)
cloudEventTypeL f CloudEvent{..} = (\cloudEventType -> CloudEvent { cloudEventType, ..} ) <$> f cloudEventType
{-# INLINE cloudEventTypeL #-}

-- | 'cloudEventDatacontenttype' Lens
cloudEventDatacontenttypeL :: Lens_' CloudEvent (Maybe Text)
cloudEventDatacontenttypeL f CloudEvent{..} = (\cloudEventDatacontenttype -> CloudEvent { cloudEventDatacontenttype, ..} ) <$> f cloudEventDatacontenttype
{-# INLINE cloudEventDatacontenttypeL #-}

-- | 'cloudEventDataschema' Lens
cloudEventDataschemaL :: Lens_' CloudEvent (Maybe Text)
cloudEventDataschemaL f CloudEvent{..} = (\cloudEventDataschema -> CloudEvent { cloudEventDataschema, ..} ) <$> f cloudEventDataschema
{-# INLINE cloudEventDataschemaL #-}

-- | 'cloudEventSubject' Lens
cloudEventSubjectL :: Lens_' CloudEvent (Maybe Text)
cloudEventSubjectL f CloudEvent{..} = (\cloudEventSubject -> CloudEvent { cloudEventSubject, ..} ) <$> f cloudEventSubject
{-# INLINE cloudEventSubjectL #-}

-- | 'cloudEventTime' Lens
cloudEventTimeL :: Lens_' CloudEvent (Maybe DateTime)
cloudEventTimeL f CloudEvent{..} = (\cloudEventTime -> CloudEvent { cloudEventTime, ..} ) <$> f cloudEventTime
{-# INLINE cloudEventTimeL #-}

-- | 'cloudEventData' Lens
cloudEventDataL :: Lens_' CloudEvent (Maybe CloudEventData)
cloudEventDataL f CloudEvent{..} = (\cloudEventData -> CloudEvent { cloudEventData, ..} ) <$> f cloudEventData
{-# INLINE cloudEventDataL #-}

-- | 'cloudEventDataBase64' Lens
cloudEventDataBase64L :: Lens_' CloudEvent (Maybe Text)
cloudEventDataBase64L f CloudEvent{..} = (\cloudEventDataBase64 -> CloudEvent { cloudEventDataBase64, ..} ) <$> f cloudEventDataBase64
{-# INLINE cloudEventDataBase64L #-}



-- * CloudEventData



-- * IoDocument

-- | 'ioDocumentType' Lens
ioDocumentTypeL :: Lens_' IoDocument (Maybe Text)
ioDocumentTypeL f IoDocument{..} = (\ioDocumentType -> IoDocument { ioDocumentType, ..} ) <$> f ioDocumentType
{-# INLINE ioDocumentTypeL #-}

-- | 'ioDocumentSource' Lens
ioDocumentSourceL :: Lens_' IoDocument (Maybe Text)
ioDocumentSourceL f IoDocument{..} = (\ioDocumentSource -> IoDocument { ioDocumentSource, ..} ) <$> f ioDocumentSource
{-# INLINE ioDocumentSourceL #-}

-- | 'ioDocumentData' Lens
ioDocumentDataL :: Lens_' IoDocument (Maybe TmuxPaneIoDocument)
ioDocumentDataL f IoDocument{..} = (\ioDocumentData -> IoDocument { ioDocumentData, ..} ) <$> f ioDocumentData
{-# INLINE ioDocumentDataL #-}

-- | 'ioDocumentId' Lens
ioDocumentIdL :: Lens_' IoDocument (Text)
ioDocumentIdL f IoDocument{..} = (\ioDocumentId -> IoDocument { ioDocumentId, ..} ) <$> f ioDocumentId
{-# INLINE ioDocumentIdL #-}

-- | 'ioDocumentSpecversion' Lens
ioDocumentSpecversionL :: Lens_' IoDocument (Text)
ioDocumentSpecversionL f IoDocument{..} = (\ioDocumentSpecversion -> IoDocument { ioDocumentSpecversion, ..} ) <$> f ioDocumentSpecversion
{-# INLINE ioDocumentSpecversionL #-}

-- | 'ioDocumentDatacontenttype' Lens
ioDocumentDatacontenttypeL :: Lens_' IoDocument (Maybe Text)
ioDocumentDatacontenttypeL f IoDocument{..} = (\ioDocumentDatacontenttype -> IoDocument { ioDocumentDatacontenttype, ..} ) <$> f ioDocumentDatacontenttype
{-# INLINE ioDocumentDatacontenttypeL #-}

-- | 'ioDocumentDataschema' Lens
ioDocumentDataschemaL :: Lens_' IoDocument (Maybe Text)
ioDocumentDataschemaL f IoDocument{..} = (\ioDocumentDataschema -> IoDocument { ioDocumentDataschema, ..} ) <$> f ioDocumentDataschema
{-# INLINE ioDocumentDataschemaL #-}

-- | 'ioDocumentSubject' Lens
ioDocumentSubjectL :: Lens_' IoDocument (Maybe Text)
ioDocumentSubjectL f IoDocument{..} = (\ioDocumentSubject -> IoDocument { ioDocumentSubject, ..} ) <$> f ioDocumentSubject
{-# INLINE ioDocumentSubjectL #-}

-- | 'ioDocumentTime' Lens
ioDocumentTimeL :: Lens_' IoDocument (Maybe DateTime)
ioDocumentTimeL f IoDocument{..} = (\ioDocumentTime -> IoDocument { ioDocumentTime, ..} ) <$> f ioDocumentTime
{-# INLINE ioDocumentTimeL #-}

-- | 'ioDocumentDataBase64' Lens
ioDocumentDataBase64L :: Lens_' IoDocument (Maybe Text)
ioDocumentDataBase64L f IoDocument{..} = (\ioDocumentDataBase64 -> IoDocument { ioDocumentDataBase64, ..} ) <$> f ioDocumentDataBase64
{-# INLINE ioDocumentDataBase64L #-}



-- * TmuxPaneIoDocument

-- | 'tmuxPaneIoDocumentInput' Lens
tmuxPaneIoDocumentInputL :: Lens_' TmuxPaneIoDocument (Text)
tmuxPaneIoDocumentInputL f TmuxPaneIoDocument{..} = (\tmuxPaneIoDocumentInput -> TmuxPaneIoDocument { tmuxPaneIoDocumentInput, ..} ) <$> f tmuxPaneIoDocumentInput
{-# INLINE tmuxPaneIoDocumentInputL #-}

-- | 'tmuxPaneIoDocumentOutput' Lens
tmuxPaneIoDocumentOutputL :: Lens_' TmuxPaneIoDocument (Text)
tmuxPaneIoDocumentOutputL f TmuxPaneIoDocument{..} = (\tmuxPaneIoDocumentOutput -> TmuxPaneIoDocument { tmuxPaneIoDocumentOutput, ..} ) <$> f tmuxPaneIoDocumentOutput
{-# INLINE tmuxPaneIoDocumentOutputL #-}

-- | 'tmuxPaneIoDocumentPs1' Lens
tmuxPaneIoDocumentPs1L :: Lens_' TmuxPaneIoDocument (Text)
tmuxPaneIoDocumentPs1L f TmuxPaneIoDocument{..} = (\tmuxPaneIoDocumentPs1 -> TmuxPaneIoDocument { tmuxPaneIoDocumentPs1, ..} ) <$> f tmuxPaneIoDocumentPs1
{-# INLINE tmuxPaneIoDocumentPs1L #-}


