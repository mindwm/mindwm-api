/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudEvent.h
 *
 * CloudEvents Specification JSON Schema
 */

#ifndef OAICloudEvent_H
#define OAICloudEvent_H

#include <QJsonObject>

#include "OAICloudEvent_data.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICloudEvent : public OAIObject {
public:
    OAICloudEvent();
    OAICloudEvent(QString json);
    ~OAICloudEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSpecversion() const;
    void setSpecversion(const QString &specversion);
    bool is_specversion_Set() const;
    bool is_specversion_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getDatacontenttype() const;
    void setDatacontenttype(const QString &datacontenttype);
    bool is_datacontenttype_Set() const;
    bool is_datacontenttype_Valid() const;

    QString getDataschema() const;
    void setDataschema(const QString &dataschema);
    bool is_dataschema_Set() const;
    bool is_dataschema_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QDateTime getTime() const;
    void setTime(const QDateTime &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    OAICloudEvent_data getData() const;
    void setData(const OAICloudEvent_data &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getDataBase64() const;
    void setDataBase64(const QString &data_base64);
    bool is_data_base64_Set() const;
    bool is_data_base64_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_specversion;
    bool m_specversion_isSet;
    bool m_specversion_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_datacontenttype;
    bool m_datacontenttype_isSet;
    bool m_datacontenttype_isValid;

    QString m_dataschema;
    bool m_dataschema_isSet;
    bool m_dataschema_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QDateTime m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    OAICloudEvent_data m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_data_base64;
    bool m_data_base64_isSet;
    bool m_data_base64_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudEvent)

#endif // OAICloudEvent_H
