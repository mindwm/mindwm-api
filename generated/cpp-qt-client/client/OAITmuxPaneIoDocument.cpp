/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITmuxPaneIoDocument.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITmuxPaneIoDocument::OAITmuxPaneIoDocument(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITmuxPaneIoDocument::OAITmuxPaneIoDocument() {
    this->initializeModel();
}

OAITmuxPaneIoDocument::~OAITmuxPaneIoDocument() {}

void OAITmuxPaneIoDocument::initializeModel() {

    m_input_isSet = false;
    m_input_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;

    m_ps1_isSet = false;
    m_ps1_isValid = false;
}

void OAITmuxPaneIoDocument::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITmuxPaneIoDocument::fromJsonObject(QJsonObject json) {

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("output")]);
    m_output_isSet = !json[QString("output")].isNull() && m_output_isValid;

    m_ps1_isValid = ::OpenAPI::fromJsonValue(m_ps1, json[QString("ps1")]);
    m_ps1_isSet = !json[QString("ps1")].isNull() && m_ps1_isValid;
}

QString OAITmuxPaneIoDocument::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITmuxPaneIoDocument::asJsonObject() const {
    QJsonObject obj;
    if (m_input_isSet) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    if (m_output_isSet) {
        obj.insert(QString("output"), ::OpenAPI::toJsonValue(m_output));
    }
    if (m_ps1_isSet) {
        obj.insert(QString("ps1"), ::OpenAPI::toJsonValue(m_ps1));
    }
    return obj;
}

QString OAITmuxPaneIoDocument::getInput() const {
    return m_input;
}
void OAITmuxPaneIoDocument::setInput(const QString &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAITmuxPaneIoDocument::is_input_Set() const{
    return m_input_isSet;
}

bool OAITmuxPaneIoDocument::is_input_Valid() const{
    return m_input_isValid;
}

QString OAITmuxPaneIoDocument::getOutput() const {
    return m_output;
}
void OAITmuxPaneIoDocument::setOutput(const QString &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAITmuxPaneIoDocument::is_output_Set() const{
    return m_output_isSet;
}

bool OAITmuxPaneIoDocument::is_output_Valid() const{
    return m_output_isValid;
}

QString OAITmuxPaneIoDocument::getPs1() const {
    return m_ps1;
}
void OAITmuxPaneIoDocument::setPs1(const QString &ps1) {
    m_ps1 = ps1;
    m_ps1_isSet = true;
}

bool OAITmuxPaneIoDocument::is_ps1_Set() const{
    return m_ps1_isSet;
}

bool OAITmuxPaneIoDocument::is_ps1_Valid() const{
    return m_ps1_isValid;
}

bool OAITmuxPaneIoDocument::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ps1_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITmuxPaneIoDocument::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_input_isValid && m_output_isValid && m_ps1_isValid && true;
}

} // namespace OpenAPI
