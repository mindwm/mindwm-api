/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClipboardPayload.h
 *
 * 
 */

#ifndef OAIClipboardPayload_H
#define OAIClipboardPayload_H

#include <QJsonObject>

#include "OAIClipboardPayload_context.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClipboardPayload_context;

class OAIClipboardPayload : public OAIObject {
public:
    OAIClipboardPayload();
    OAIClipboardPayload(QString json);
    ~OAIClipboardPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getStart() const;
    void setStart(const QList<qint32> &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QList<qint32> getStop() const;
    void setStop(const QList<qint32> &stop);
    bool is_stop_Set() const;
    bool is_stop_Valid() const;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIClipboardPayload_context getContext() const;
    void setContext(const OAIClipboardPayload_context &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QList<qint32> m_stop;
    bool m_stop_isSet;
    bool m_stop_isValid;

    QString m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIClipboardPayload_context m_context;
    bool m_context_isSet;
    bool m_context_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClipboardPayload)

#endif // OAIClipboardPayload_H
