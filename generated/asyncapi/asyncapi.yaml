asyncapi: '3.0.0'
info:
  title: Mindwm API
  version: '0.1.0'
  description: This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  asciinema:
    host: /tmp/mindwm-asciinema-${MINDWM_UUID}.socket
    protocol: unixsocket
    description: Asciinema
    variables:
      USER_HOST:
        default: localhost
    externalDocs:
      url: https://github.com/mindwm/mindwm-manager/blob/dc926f637bb8d31f21ecbd28479ab9b0a1ece23c/src/mindwm/modules/tmux_session.py
  mindwm-client:
    host: /tmp/mindwm-asciinema-${MINDWM_UUID}.socket
    protocol: unixsocket
    description: "Mindwm Client      \n"
    variables:
      USER_HOSTNAME:
        default: localhost
    externalDocs:
      url: https://github.com/mindwm/mindwm-manager/blob/dc926f637bb8d31f21ecbd28479ab9b0a1ece23c/src/mindwm/modules/pipe_listener.py
  nats:
    host: ${address}:${port}
    protocol: nats
    description: |
      Nats Server
    variables:
      address:
        enum:
        - '10.20.30.211'
        - nats.nats
        default: nats.nats
      port:
        enum:
        - '31101'
        - '4222'
        default: '4222'
channels:
  TmuxPane:
    address: /tmp/mindwm-asciinema-${MINDWM_UUID}.socket
    externalDocs:
      url: https://github.com/mindwm/mindwm-manager/blob/dc926f637bb8d31f21ecbd28479ab9b0a1ece23c/src/mindwm/modules/tmux_session.py#L33
    servers:
    - $ref: '#/servers/asciinema'
    - $ref: '#/servers/mindwm-client'
    messages:
      TmuxPaneIoDocument:
        $ref: '#/components/messages/TmuxPaneIoDocument'
  HostJetStreamChannel:
    address: KN_USER_${USERNAME}__${HOSTNAME}_BROKER_KNE_TRIGGER
    servers:
    - $ref: '#/servers/nats'
    externalDocs:
      url: https://github.com/knative-extensions/eventing-natss
  HostNatsTopicIn:
    address: user-${USERNAME}.${HOSTNAME}-broker-kne-trigger._knative
    servers:
    - $ref: '#/servers/nats'
  HostNatsTopicIoDocument:
    address: mindwm.${USER}.${HOSTNAME}.tmux.${TMUX_SOCKET}.${MINDWM_UUID}.${TMUX_ID}.${TMUX_PANE_ID}.iodocument
    servers:
    - $ref: '#/servers/nats'
    messages:
      IoDocument:
        $ref: '#/components/messages/IoDocument'
  HostNatsTopicClipboard:
    address: mindwm.${USER}.${HOSTNAME}.clipboard
    servers:
    - $ref: '#/servers/nats'
    messages:
      Clipboard:
        $ref: '#/components/messages/Clipboard'
operations:
  TmuxPaneIoDocument:
    action: send
    channel:
      $ref: '#/channels/TmuxPane'
    messages:
    - $ref: '#/channels/TmuxPane/messages/TmuxPaneIoDocument'
  IoDocument:
    action: send
    channel:
      $ref: '#/channels/HostNatsTopicIoDocument'
    messages:
    - $ref: '#/channels/HostNatsTopicIoDocument/messages/IoDocument'
  Clipboard:
    action: send
    channel:
      $ref: '#/channels/HostNatsTopicClipboard'
    messages:
    - $ref: '#/channels/HostNatsTopicClipboard/messages/Clipboard'
components:
  messages:
    TmuxPaneIoDocument:
      summary: Basic IoDocument produced by mindwm-client
      payload:
        $ref: '#/components/schemas/TmuxPaneIoDocument'
    IoDocument:
      summary: TmuxPaneIoDocument in cloudevent
      payload:
        $ref: '#/components/schemas/IoDocument'
    Clipboard:
      summary: Clipboard
      payload:
        $ref: '#/components/schemas/Clipboard'
  schemas:
    CloudEvent:
      $ref: https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/formats/cloudevents.json
      discrimniator: type
    IoDocument:
      allOf:
      - $ref: '#/components/schemas/CloudEvent'
      - properties:
          type:
            type: string
            const: IoDocument
          source:
            type: string
            pattern: '[a-zA-Z0-9_][a-zA-Z0-9_-]{0,31}\\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.tmux\\.[A-Za-z0-9+/]*={0,2}\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\.[0-9]+?\\.[0-9]+?\\.tiodocument$'
          data:
            $ref: '#/components/schemas/TmuxPaneIoDocument'
      additionalProperties: false
    Clipboard:
      allOf:
      - $ref: '#/components/schemas/CloudEvent'
      - properties:
          type:
            type: string
            const: Clipboard
            defaullt: Clipboard
          subject:
            type: string
            const: Clipboard
            defaullt: Clipboard
          source:
            type: string
            pattern: mindwm.[a-zA-Z0-9_][a-zA-Z0-9_-]{0,31}\\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-).clipboard$
          data:
            $ref: '#/components/schemas/ClipboardPayload'
      additionalProperties: false
      examples:
      - source: mindwm.alice.laptop.clipboard
        subject: Clipboard
        type: Clipboard
        id: d0c13e76-3f79-11ef-8f1d-4be6bb85b216
        specversion: '1.0.0'
        data:
          $ref: '#/components/schemas/ClipboardPayload/examples/0'
    ClipboardPayload:
      type: object
      properties:
        start:
          type: array
          description: Starting position of clipboard selection [x,y]
          items:
            type: integer
          minItems: 2
          maxItems: 2
        stop:
          type: array
          description: Ending position of clipboard selection [x,y]
          items:
            type: integer
          minItems: 2
          maxItems: 2
        data:
          type: string
          description: Clipboard data
          minLength: 1
        type:
          type: string
          description: Clipboard type
          enum:
          - primary
          - secondary
          - clipboard
        context:
          type: object
          description: Selection context
          properties:
            window:
              type: string
              description: window id
      examples:
      - data: clipboard selection data
        type: primary
        start:
        - 86
        - 120
        stop:
        - 321
        - 420
        context:
          window: '0x8061cdef'
    TmuxPaneIoDocument:
      type: object
      properties:
        input:
          type: string
          description: User input
          minLength: 1
        output:
          type: string
          minLength: 0
          description: Command output (mix of stdout & stderr)
        ps1:
          type: string
          description: ps1 (prompt) AFTER the input and output
          minLength: 1
      additionalProperties: false
      required:
      - input
      - output
      - ps1
      examples:
      - input: uptime
        output: '16:37:51 up 19 days,  2:15, 71 users,  load average: 2.01, 2.85, 2.95'
        ps1: user@mindwm-dev1:~/rnd/asyncapi$
