/*
Mindwm API

API defining the operations available in the Mindwm API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mindwm

import (
	"encoding/json"
)

// checks if the IoDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IoDocument{}

// IoDocument struct for IoDocument
type IoDocument struct {
	// user input
	UserInput *string `json:"user_input,omitempty"`
	// command output (mix of stdout/stderr)
	Output *string `json:"output,omitempty"`
	// Full input command
	Fullcmd *string `json:"fullcmd,omitempty"`
}

// NewIoDocument instantiates a new IoDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoDocument() *IoDocument {
	this := IoDocument{}
	return &this
}

// NewIoDocumentWithDefaults instantiates a new IoDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoDocumentWithDefaults() *IoDocument {
	this := IoDocument{}
	return &this
}

// GetUserInput returns the UserInput field value if set, zero value otherwise.
func (o *IoDocument) GetUserInput() string {
	if o == nil || IsNil(o.UserInput) {
		var ret string
		return ret
	}
	return *o.UserInput
}

// GetUserInputOk returns a tuple with the UserInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoDocument) GetUserInputOk() (*string, bool) {
	if o == nil || IsNil(o.UserInput) {
		return nil, false
	}
	return o.UserInput, true
}

// HasUserInput returns a boolean if a field has been set.
func (o *IoDocument) HasUserInput() bool {
	if o != nil && !IsNil(o.UserInput) {
		return true
	}

	return false
}

// SetUserInput gets a reference to the given string and assigns it to the UserInput field.
func (o *IoDocument) SetUserInput(v string) {
	o.UserInput = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *IoDocument) GetOutput() string {
	if o == nil || IsNil(o.Output) {
		var ret string
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoDocument) GetOutputOk() (*string, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *IoDocument) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given string and assigns it to the Output field.
func (o *IoDocument) SetOutput(v string) {
	o.Output = &v
}

// GetFullcmd returns the Fullcmd field value if set, zero value otherwise.
func (o *IoDocument) GetFullcmd() string {
	if o == nil || IsNil(o.Fullcmd) {
		var ret string
		return ret
	}
	return *o.Fullcmd
}

// GetFullcmdOk returns a tuple with the Fullcmd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoDocument) GetFullcmdOk() (*string, bool) {
	if o == nil || IsNil(o.Fullcmd) {
		return nil, false
	}
	return o.Fullcmd, true
}

// HasFullcmd returns a boolean if a field has been set.
func (o *IoDocument) HasFullcmd() bool {
	if o != nil && !IsNil(o.Fullcmd) {
		return true
	}

	return false
}

// SetFullcmd gets a reference to the given string and assigns it to the Fullcmd field.
func (o *IoDocument) SetFullcmd(v string) {
	o.Fullcmd = &v
}

func (o IoDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IoDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserInput) {
		toSerialize["user_input"] = o.UserInput
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !IsNil(o.Fullcmd) {
		toSerialize["fullcmd"] = o.Fullcmd
	}
	return toSerialize, nil
}

type NullableIoDocument struct {
	value *IoDocument
	isSet bool
}

func (v NullableIoDocument) Get() *IoDocument {
	return v.value
}

func (v *NullableIoDocument) Set(val *IoDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableIoDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableIoDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoDocument(val *IoDocument) *NullableIoDocument {
	return &NullableIoDocument{value: val, isSet: true}
}

func (v NullableIoDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


