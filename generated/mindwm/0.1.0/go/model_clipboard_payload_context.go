/*
Mindwm API

API defining the operations available in the Mindwm API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mindwm

import (
	"encoding/json"
)

// checks if the ClipboardPayloadContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClipboardPayloadContext{}

// ClipboardPayloadContext Selection context
type ClipboardPayloadContext struct {
	// window id
	Window *string `json:"window,omitempty"`
}

// NewClipboardPayloadContext instantiates a new ClipboardPayloadContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClipboardPayloadContext() *ClipboardPayloadContext {
	this := ClipboardPayloadContext{}
	return &this
}

// NewClipboardPayloadContextWithDefaults instantiates a new ClipboardPayloadContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClipboardPayloadContextWithDefaults() *ClipboardPayloadContext {
	this := ClipboardPayloadContext{}
	return &this
}

// GetWindow returns the Window field value if set, zero value otherwise.
func (o *ClipboardPayloadContext) GetWindow() string {
	if o == nil || IsNil(o.Window) {
		var ret string
		return ret
	}
	return *o.Window
}

// GetWindowOk returns a tuple with the Window field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClipboardPayloadContext) GetWindowOk() (*string, bool) {
	if o == nil || IsNil(o.Window) {
		return nil, false
	}
	return o.Window, true
}

// HasWindow returns a boolean if a field has been set.
func (o *ClipboardPayloadContext) HasWindow() bool {
	if o != nil && !IsNil(o.Window) {
		return true
	}

	return false
}

// SetWindow gets a reference to the given string and assigns it to the Window field.
func (o *ClipboardPayloadContext) SetWindow(v string) {
	o.Window = &v
}

func (o ClipboardPayloadContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClipboardPayloadContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Window) {
		toSerialize["window"] = o.Window
	}
	return toSerialize, nil
}

type NullableClipboardPayloadContext struct {
	value *ClipboardPayloadContext
	isSet bool
}

func (v NullableClipboardPayloadContext) Get() *ClipboardPayloadContext {
	return v.value
}

func (v *NullableClipboardPayloadContext) Set(val *ClipboardPayloadContext) {
	v.value = val
	v.isSet = true
}

func (v NullableClipboardPayloadContext) IsSet() bool {
	return v.isSet
}

func (v *NullableClipboardPayloadContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClipboardPayloadContext(val *ClipboardPayloadContext) *NullableClipboardPayloadContext {
	return &NullableClipboardPayloadContext{value: val, isSet: true}
}

func (v NullableClipboardPayloadContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClipboardPayloadContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


