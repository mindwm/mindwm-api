//
// ClipboardPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ClipboardPayload: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case primary = "primary"
        case secondary = "secondary"
        case clipboard = "clipboard"
    }
    static let dataRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** Starting position of clipboard selection [x,y] */
    public var start: [Int]?
    /** Ending position of clipboard selection [x,y] */
    public var stop: [Int]?
    /** Clipboard data */
    public var data: String?
    /** Clipboard type */
    public var type: ModelType?
    public var context: ClipboardPayloadContext?

    public init(start: [Int]? = nil, stop: [Int]? = nil, data: String? = nil, type: ModelType? = nil, context: ClipboardPayloadContext? = nil) {
        self.start = start
        self.stop = stop
        self.data = data
        self.type = type
        self.context = context
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case start
        case stop
        case data
        case type
        case context
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(start, forKey: .start)
        try container.encodeIfPresent(stop, forKey: .stop)
        try container.encodeIfPresent(data, forKey: .data)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(context, forKey: .context)
    }
}

