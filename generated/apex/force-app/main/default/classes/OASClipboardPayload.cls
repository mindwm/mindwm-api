/*
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASClipboardPayload
 */
public class OASClipboardPayload {
    /**
     * Starting position of clipboard selection [x,y]
     * @return start
     */
    public List<Integer> start { get; set; }

    /**
     * Ending position of clipboard selection [x,y]
     * @return stop
     */
    public List<Integer> stop { get; set; }

    /**
     * Clipboard data
     * @return data
     */
    public String data { get; set; }

    /**
     * Clipboard type
     */
    public enum TypeEnum {
        PRIMARY,
        SECONDARY,
        CLIPBOARD
    }

    /**
     * Clipboard type
     * @return type
     */
    public TypeEnum type { get; set; }

    /**
     * Get context
     * @return context
     */
    public OASClipboardPayloadContext context { get; set; }

    public OASClipboardPayload() {
        start = new List<Integer>();
        stop = new List<Integer>();
    }

    public static OASClipboardPayload getExample() {
        OASClipboardPayload clipboardPayload = new OASClipboardPayload();
          clipboardPayload.start = new List<Integer>{0};
          clipboardPayload.stop = new List<Integer>{0};
          clipboardPayload.data = '';
          clipboardPayload.type = TypeEnum.PRIMARY;
          clipboardPayload.context = OASClipboardPayloadContext.getExample();
        return clipboardPayload;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASClipboardPayload) {           
            OASClipboardPayload clipboardPayload = (OASClipboardPayload) obj;
            return this.start == clipboardPayload.start
                && this.stop == clipboardPayload.stop
                && this.data == clipboardPayload.data
                && this.type == clipboardPayload.type
                && this.context == clipboardPayload.context;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (start == null ? 0 : System.hashCode(start));
        hashCode = (17 * hashCode) + (stop == null ? 0 : System.hashCode(stop));
        hashCode = (17 * hashCode) + (data == null ? 0 : System.hashCode(data));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (context == null ? 0 : System.hashCode(context));
        return hashCode;
    }
}

