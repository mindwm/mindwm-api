/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClipboardPayload_context.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClipboardPayload_context::OAIClipboardPayload_context(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClipboardPayload_context::OAIClipboardPayload_context() {
    this->initializeModel();
}

OAIClipboardPayload_context::~OAIClipboardPayload_context() {}

void OAIClipboardPayload_context::initializeModel() {

    m_window_isSet = false;
    m_window_isValid = false;
}

void OAIClipboardPayload_context::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClipboardPayload_context::fromJsonObject(QJsonObject json) {

    m_window_isValid = ::OpenAPI::fromJsonValue(window, json[QString("window")]);
    m_window_isSet = !json[QString("window")].isNull() && m_window_isValid;
}

QString OAIClipboardPayload_context::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClipboardPayload_context::asJsonObject() const {
    QJsonObject obj;
    if (m_window_isSet) {
        obj.insert(QString("window"), ::OpenAPI::toJsonValue(window));
    }
    return obj;
}

QString OAIClipboardPayload_context::getWindow() const {
    return window;
}
void OAIClipboardPayload_context::setWindow(const QString &window) {
    this->window = window;
    this->m_window_isSet = true;
}

bool OAIClipboardPayload_context::is_window_Set() const{
    return m_window_isSet;
}

bool OAIClipboardPayload_context::is_window_Valid() const{
    return m_window_isValid;
}

bool OAIClipboardPayload_context::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_window_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClipboardPayload_context::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
