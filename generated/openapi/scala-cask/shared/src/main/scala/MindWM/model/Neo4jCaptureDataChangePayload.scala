/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * OpenAPI spec version: 0.1.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package MindWM.model
import MindWM.model.Neo4jCaptureDataChangeNodePayload
import MindWM.model.Neo4jCaptureDataChangeRelationshipPayload
import MindWM.model.Neo4jCaptureDataChangeRelationshipPayloadEnd
import ujson.Value
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class Neo4jCaptureDataChangePayload(
  after: Value,

    before: String,

    id: String,

    `type`: String,

    end: Neo4jCaptureDataChangeRelationshipPayloadEnd,

    label: String,

    start: Neo4jCaptureDataChangeRelationshipPayloadEnd

  ) {

  def asJson: String = asData.asJson

  def asData : Neo4jCaptureDataChangePayloadData = {
    Neo4jCaptureDataChangePayloadData(
            after = after,
            before = before,
            id = id,
            `type` = `type`,
            end = end,
            label = label,
            start = start
    )
  }

}

object Neo4jCaptureDataChangePayload{

    given RW[Neo4jCaptureDataChangePayload] = Neo4jCaptureDataChangePayloadData.readWriter.bimap[Neo4jCaptureDataChangePayload](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case after extends Fields("after")
            case before extends Fields("before")
            case id extends Fields("id")
            case `type` extends Fields("`type`")
            case end extends Fields("end")
            case label extends Fields("label")
            case start extends Fields("start")
    }


}

