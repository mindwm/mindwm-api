/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * OpenAPI spec version: 0.1.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package MindWM.model
import MindWM.model.Neo4jCaptureDataChangeMetaSource
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class Neo4jCaptureDataChangeMeta(
  operation: String,

    source: Neo4jCaptureDataChangeMetaSource,

    timestamp: Int,

    txEventId: Int,

    txEventsCount: Int,

    txId: Int,

    username: String

  ) {

  def asJson: String = asData.asJson

  def asData : Neo4jCaptureDataChangeMetaData = {
    Neo4jCaptureDataChangeMetaData(
            operation = operation,
            source = source,
            timestamp = timestamp,
            txEventId = txEventId,
            txEventsCount = txEventsCount,
            txId = txId,
            username = username
    )
  }

}

object Neo4jCaptureDataChangeMeta{

    given RW[Neo4jCaptureDataChangeMeta] = Neo4jCaptureDataChangeMetaData.readWriter.bimap[Neo4jCaptureDataChangeMeta](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case operation extends Fields("operation")
            case source extends Fields("source")
            case timestamp extends Fields("timestamp")
            case txEventId extends Fields("txEventId")
            case txEventsCount extends Fields("txEventsCount")
            case txId extends Fields("txId")
            case username extends Fields("username")
    }


}

