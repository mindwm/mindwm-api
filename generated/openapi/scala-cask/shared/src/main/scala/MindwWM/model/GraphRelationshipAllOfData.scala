/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * OpenAPI spec version: 0.1.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package MindwWM.model
import MindwWM.model.Neo4jCaptureDataChangeMeta
import MindwWM.model.Neo4jCaptureDataChangeRelationshipPayload
import MindwWM.model.Neo4jCaptureDataChangeSchema
import java.time.OffsetDateTime
import ujson.Value
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class GraphRelationshipAllOfData(
  headers: Value,

    messageKey: String,

    meta: Neo4jCaptureDataChangeMeta,

    offset: Int,

    partition: Int,

    sourceType: String,

    timestamp: OffsetDateTime,

    topic: String,

    schema: Neo4jCaptureDataChangeSchema,

    payload: Neo4jCaptureDataChangeRelationshipPayload

  ) {

  def asJson: String = asData.asJson

  def asData : GraphRelationshipAllOfDataData = {
    GraphRelationshipAllOfDataData(
            headers = headers,
            messageKey = messageKey,
            meta = meta,
            offset = offset,
            partition = partition,
            sourceType = sourceType,
            timestamp = timestamp,
            topic = topic,
            schema = schema,
            payload = payload
    )
  }

}

object GraphRelationshipAllOfData{

    given RW[GraphRelationshipAllOfData] = GraphRelationshipAllOfDataData.readWriter.bimap[GraphRelationshipAllOfData](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case headers extends Fields("headers")
            case messageKey extends Fields("messageKey")
            case meta extends Fields("meta")
            case offset extends Fields("offset")
            case partition extends Fields("partition")
            case sourceType extends Fields("sourceType")
            case timestamp extends Fields("timestamp")
            case topic extends Fields("topic")
            case schema extends Fields("schema")
            case payload extends Fields("payload")
    }


}

