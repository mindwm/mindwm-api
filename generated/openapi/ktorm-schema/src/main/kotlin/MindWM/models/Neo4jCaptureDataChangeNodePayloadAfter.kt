/**
* Mindwm API
* This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package MindWM.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param labels 
 * @param properties 
 */
object Neo4jCaptureDataChangeNodePayloadAfters : BaseTable<Neo4jCaptureDataChangeNodePayloadAfter>("Neo4jCaptureDataChangeNodePayload_after") {
    val properties = blob("properties")

    /**
     * Create an entity of type Neo4jCaptureDataChangeNodePayloadAfter from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = Neo4jCaptureDataChangeNodePayloadAfter(
        labels = emptyList() /* kotlin.Array<kotlin.String> */,
        properties = row[properties] /* kotlin.collections.Map<kotlin.String, kotlin.Any> */
    )

    /**
    * Assign all the columns from the entity of type Neo4jCaptureDataChangeNodePayloadAfter to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = Neo4jCaptureDataChangeNodePayloadAfter()
    * database.update(Neo4jCaptureDataChangeNodePayloadAfters, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: Neo4jCaptureDataChangeNodePayloadAfter) {
        this.apply {
            set(Neo4jCaptureDataChangeNodePayloadAfters.properties, entity.properties)
        }
    }

}


object Neo4jCaptureDataChangeNodePayloadAfterLabels : BaseTable<Pair<kotlin.Long, kotlin.String>>("Neo4jCaptureDataChangeNodePayloadAfterLabels") {
    val neo4jCaptureDataChangeNodePayloadAfter = long("neo4jCaptureDataChangeNodePayloadAfter")
    val labels = text("labels")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[neo4jCaptureDataChangeNodePayloadAfter] ?: 0, row[labels] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(Neo4jCaptureDataChangeNodePayloadAfterLabels.neo4jCaptureDataChangeNodePayloadAfter, entity.first)
            set(Neo4jCaptureDataChangeNodePayloadAfterLabels.labels, entity.second)
        }
    }

}

