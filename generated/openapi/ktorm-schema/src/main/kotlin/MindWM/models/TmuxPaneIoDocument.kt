/**
* Mindwm API
* This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package MindWM.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param input User input
 * @param output Command output (mix of stdout & stderr)
 * @param ps1 ps1 (prompt) AFTER the input and output
 */
object TmuxPaneIoDocuments : BaseTable<TmuxPaneIoDocument>("TmuxPaneIoDocument") {
    val input = text("input") /* User input */
    val output = text("output") /* Command output (mix of stdout & stderr) */
    val ps1 = text("ps1") /* ps1 (prompt) AFTER the input and output */

    /**
     * Create an entity of type TmuxPaneIoDocument from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TmuxPaneIoDocument(
        input = row[input] ?: "" /* kotlin.String */ /* User input */,
        output = row[output] ?: "" /* kotlin.String */ /* Command output (mix of stdout & stderr) */,
        ps1 = row[ps1] ?: "" /* kotlin.String */ /* ps1 (prompt) AFTER the input and output */
    )

    /**
    * Assign all the columns from the entity of type TmuxPaneIoDocument to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TmuxPaneIoDocument()
    * database.update(TmuxPaneIoDocuments, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TmuxPaneIoDocument) {
        this.apply {
            set(TmuxPaneIoDocuments.input, entity.input)
            set(TmuxPaneIoDocuments.output, entity.output)
            set(TmuxPaneIoDocuments.ps1, entity.ps1)
        }
    }

}


