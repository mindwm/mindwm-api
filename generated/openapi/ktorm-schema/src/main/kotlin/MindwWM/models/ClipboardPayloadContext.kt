/**
* Mindwm API
* This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package MindwWM.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Selection context
 * @param window window id
 */
object ClipboardPayloadContexts : BaseTable<ClipboardPayloadContext>("ClipboardPayload_context") {
    val window = text("window") /* null */ /* window id */

    /**
     * Create an entity of type ClipboardPayloadContext from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ClipboardPayloadContext(
        window = row[window]  /* kotlin.String? */ /* window id */
    )

    /**
    * Assign all the columns from the entity of type ClipboardPayloadContext to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ClipboardPayloadContext()
    * database.update(ClipboardPayloadContexts, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ClipboardPayloadContext) {
        this.apply {
            set(ClipboardPayloadContexts.window, entity.window)
        }
    }

}


