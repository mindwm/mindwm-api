/**
* Mindwm API
* This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package MindwWM.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param hostname 
 */
object Neo4jCaptureDataChangeMetaSources : BaseTable<Neo4jCaptureDataChangeMetaSource>("Neo4jCaptureDataChange_meta_source") {
    val hostname = text("hostname")

    /**
     * Create an entity of type Neo4jCaptureDataChangeMetaSource from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = Neo4jCaptureDataChangeMetaSource(
        hostname = row[hostname] ?: "" /* kotlin.String */
    )

    /**
    * Assign all the columns from the entity of type Neo4jCaptureDataChangeMetaSource to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = Neo4jCaptureDataChangeMetaSource()
    * database.update(Neo4jCaptureDataChangeMetaSources, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: Neo4jCaptureDataChangeMetaSource) {
        this.apply {
            set(Neo4jCaptureDataChangeMetaSources.hostname, entity.hostname)
        }
    }

}


