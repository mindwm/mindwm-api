/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package MindWM.models

import MindWM.models.CloudEventData

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * CloudEvents Specification JSON Schema
 *
 * @param id Identifies the event.
 * @param source Identifies the context in which an event happened.
 * @param specversion The version of the CloudEvents specification which the event uses.
 * @param type Describes the type of event related to the originating occurrence.
 * @param datacontenttype Content type of the data value. Must adhere to RFC 2046 format.
 * @param dataschema Identifies the schema that data adheres to.
 * @param subject Describes the subject of the event in the context of the event producer (identified by source).
 * @param time Timestamp of when the occurrence happened. Must adhere to RFC 3339.
 * @param `data` 
 * @param dataBase64 Base64 encoded event payload. Must adhere to RFC4648.
 */


data class CloudEvent (

    /* Identifies the event. */
    @Json(name = "id")
    val id: kotlin.String,

    /* Identifies the context in which an event happened. */
    @Json(name = "source")
    val source: kotlin.String,

    /* The version of the CloudEvents specification which the event uses. */
    @Json(name = "specversion")
    val specversion: kotlin.String,

    /* Describes the type of event related to the originating occurrence. */
    @Json(name = "type")
    val type: kotlin.String,

    /* Content type of the data value. Must adhere to RFC 2046 format. */
    @Json(name = "datacontenttype")
    val datacontenttype: kotlin.String? = null,

    /* Identifies the schema that data adheres to. */
    @Json(name = "dataschema")
    val dataschema: java.net.URI? = null,

    /* Describes the subject of the event in the context of the event producer (identified by source). */
    @Json(name = "subject")
    val subject: kotlin.String? = null,

    /* Timestamp of when the occurrence happened. Must adhere to RFC 3339. */
    @Json(name = "time")
    val time: java.time.OffsetDateTime? = null,

    @Json(name = "data")
    val `data`: CloudEventData? = null,

    /* Base64 encoded event payload. Must adhere to RFC4648. */
    @Json(name = "data_base64")
    val dataBase64: kotlin.String? = null

) {


}

