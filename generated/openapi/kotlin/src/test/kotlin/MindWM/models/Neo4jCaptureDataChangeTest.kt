/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package MindWM.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import MindWM.models.Neo4jCaptureDataChange
import MindWM.models.Neo4jCaptureDataChangeMeta
import MindWM.models.Neo4jCaptureDataChangePayload
import MindWM.models.Neo4jCaptureDataChangeSchema

class Neo4jCaptureDataChangeTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Neo4jCaptureDataChange
        //val modelInstance = Neo4jCaptureDataChange()

        // to test the property `headers`
        should("test headers") {
            // uncomment below to test the property
            //modelInstance.headers shouldBe ("TODO")
        }

        // to test the property `messageKey`
        should("test messageKey") {
            // uncomment below to test the property
            //modelInstance.messageKey shouldBe ("TODO")
        }

        // to test the property `meta`
        should("test meta") {
            // uncomment below to test the property
            //modelInstance.meta shouldBe ("TODO")
        }

        // to test the property `offset`
        should("test offset") {
            // uncomment below to test the property
            //modelInstance.offset shouldBe ("TODO")
        }

        // to test the property `partition`
        should("test partition") {
            // uncomment below to test the property
            //modelInstance.partition shouldBe ("TODO")
        }

        // to test the property `sourceType`
        should("test sourceType") {
            // uncomment below to test the property
            //modelInstance.sourceType shouldBe ("TODO")
        }

        // to test the property `timestamp`
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `topic`
        should("test topic") {
            // uncomment below to test the property
            //modelInstance.topic shouldBe ("TODO")
        }

        // to test the property `schema`
        should("test schema") {
            // uncomment below to test the property
            //modelInstance.schema shouldBe ("TODO")
        }

        // to test the property `payload`
        should("test payload") {
            // uncomment below to test the property
            //modelInstance.payload shouldBe ("TODO")
        }

    }
}
