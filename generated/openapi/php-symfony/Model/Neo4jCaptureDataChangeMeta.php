<?php
/**
 * Neo4jCaptureDataChangeMeta
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Neo4jCaptureDataChangeMeta model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Neo4jCaptureDataChangeMeta 
{
        /**
     * @var string|null
     * @SerializedName("operation")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $operation = null;

    /**
     * @var Neo4jCaptureDataChangeMetaSource|null
     * @SerializedName("source")
     * @Type("OpenAPI\Server\Model\Neo4jCaptureDataChangeMetaSource")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\Neo4jCaptureDataChangeMetaSource")]
    protected ?Neo4jCaptureDataChangeMetaSource $source = null;

    /**
     * @var int|null
     * @SerializedName("timestamp")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $timestamp = null;

    /**
     * @var int|null
     * @SerializedName("txEventId")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $txEventId = null;

    /**
     * @var int|null
     * @SerializedName("txEventsCount")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $txEventsCount = null;

    /**
     * @var int|null
     * @SerializedName("txId")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $txId = null;

    /**
     * @var string|null
     * @SerializedName("username")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $username = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->operation = array_key_exists('operation', $data) ? $data['operation'] : $this->operation;
            $this->source = array_key_exists('source', $data) ? $data['source'] : $this->source;
            $this->timestamp = array_key_exists('timestamp', $data) ? $data['timestamp'] : $this->timestamp;
            $this->txEventId = array_key_exists('txEventId', $data) ? $data['txEventId'] : $this->txEventId;
            $this->txEventsCount = array_key_exists('txEventsCount', $data) ? $data['txEventsCount'] : $this->txEventsCount;
            $this->txId = array_key_exists('txId', $data) ? $data['txId'] : $this->txId;
            $this->username = array_key_exists('username', $data) ? $data['username'] : $this->username;
        }
    }

    /**
     * Gets operation.
     *
     * @return string|null
     */
    public function getOperation(): ?string
    {
        return $this->operation;
    }

    /**
    * Sets operation.
    *
    * @param string|null $operation
    *
    * @return $this
    */
    public function setOperation(?string $operation): self
    {
        $this->operation = $operation;

        return $this;
    }




    /**
     * Gets source.
     *
     * @return Neo4jCaptureDataChangeMetaSource|null
     */
    public function getSource(): ?Neo4jCaptureDataChangeMetaSource
    {
        return $this->source;
    }

    /**
    * Sets source.
    *
    * @param Neo4jCaptureDataChangeMetaSource|null $source
    *
    * @return $this
    */
    public function setSource(?Neo4jCaptureDataChangeMetaSource $source): self
    {
        $this->source = $source;

        return $this;
    }




    /**
     * Gets timestamp.
     *
     * @return int|null
     */
    public function getTimestamp(): ?int
    {
        return $this->timestamp;
    }

    /**
    * Sets timestamp.
    *
    * @param int|null $timestamp
    *
    * @return $this
    */
    public function setTimestamp(?int $timestamp): self
    {
        $this->timestamp = $timestamp;

        return $this;
    }




    /**
     * Gets txEventId.
     *
     * @return int|null
     */
    public function getTxEventId(): ?int
    {
        return $this->txEventId;
    }

    /**
    * Sets txEventId.
    *
    * @param int|null $txEventId
    *
    * @return $this
    */
    public function setTxEventId(?int $txEventId): self
    {
        $this->txEventId = $txEventId;

        return $this;
    }




    /**
     * Gets txEventsCount.
     *
     * @return int|null
     */
    public function getTxEventsCount(): ?int
    {
        return $this->txEventsCount;
    }

    /**
    * Sets txEventsCount.
    *
    * @param int|null $txEventsCount
    *
    * @return $this
    */
    public function setTxEventsCount(?int $txEventsCount): self
    {
        $this->txEventsCount = $txEventsCount;

        return $this;
    }




    /**
     * Gets txId.
     *
     * @return int|null
     */
    public function getTxId(): ?int
    {
        return $this->txId;
    }

    /**
    * Sets txId.
    *
    * @param int|null $txId
    *
    * @return $this
    */
    public function setTxId(?int $txId): self
    {
        $this->txId = $txId;

        return $this;
    }




    /**
     * Gets username.
     *
     * @return string|null
     */
    public function getUsername(): ?string
    {
        return $this->username;
    }

    /**
    * Sets username.
    *
    * @param string|null $username
    *
    * @return $this
    */
    public function setUsername(?string $username): self
    {
        $this->username = $username;

        return $this;
    }



}


