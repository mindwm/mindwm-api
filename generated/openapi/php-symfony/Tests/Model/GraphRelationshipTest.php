<?php
/**
 * GraphRelationshipTest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Tests\Model;

use OpenAPI\Server\Model\GraphRelationship;
use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * GraphRelationshipTest Class Doc Comment
 *
 * @category    Class
 * @description GraphRelationship
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \OpenAPI\Server\Model\GraphRelationship
 */
class GraphRelationshipTest extends TestCase
{
    protected GraphRelationship|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $this->object = $this->getMockBuilder(GraphRelationship::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(GraphRelationship::class));
        $this->assertInstanceOf(GraphRelationship::class, $this->object);
    }

    /**
     * Test attribute "id"
     *
     * @group unit
     * @small
     */
    public function testPropertyId(): void
    {
        $this->markTestSkipped('Test for property id not implemented');
    }

    /**
     * Test attribute "source"
     *
     * @group unit
     * @small
     */
    public function testPropertySource(): void
    {
        $this->markTestSkipped('Test for property source not implemented');
    }

    /**
     * Test attribute "specversion"
     *
     * @group unit
     * @small
     */
    public function testPropertySpecversion(): void
    {
        $this->markTestSkipped('Test for property specversion not implemented');
    }

    /**
     * Test attribute "type"
     *
     * @group unit
     * @small
     */
    public function testPropertyType(): void
    {
        $this->markTestSkipped('Test for property type not implemented');
    }

    /**
     * Test attribute "datacontenttype"
     *
     * @group unit
     * @small
     */
    public function testPropertyDatacontenttype(): void
    {
        $this->markTestSkipped('Test for property datacontenttype not implemented');
    }

    /**
     * Test attribute "dataschema"
     *
     * @group unit
     * @small
     */
    public function testPropertyDataschema(): void
    {
        $this->markTestSkipped('Test for property dataschema not implemented');
    }

    /**
     * Test attribute "subject"
     *
     * @group unit
     * @small
     */
    public function testPropertySubject(): void
    {
        $this->markTestSkipped('Test for property subject not implemented');
    }

    /**
     * Test attribute "time"
     *
     * @group unit
     * @small
     */
    public function testPropertyTime(): void
    {
        $this->markTestSkipped('Test for property time not implemented');
    }

    /**
     * Test attribute "data"
     *
     * @group unit
     * @small
     */
    public function testPropertyData(): void
    {
        $this->markTestSkipped('Test for property data not implemented');
    }

    /**
     * Test attribute "dataBase64"
     *
     * @group unit
     * @small
     */
    public function testPropertyDataBase64(): void
    {
        $this->markTestSkipped('Test for property dataBase64 not implemented');
    }
}
