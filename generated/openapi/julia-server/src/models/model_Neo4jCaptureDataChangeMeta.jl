# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Neo4jCaptureDataChange_meta

    Neo4jCaptureDataChangeMeta(;
        operation=nothing,
        source=nothing,
        timestamp=nothing,
        txEventId=nothing,
        txEventsCount=nothing,
        txId=nothing,
        username=nothing,
    )

    - operation::String
    - source::Neo4jCaptureDataChangeMetaSource
    - timestamp::Int64
    - txEventId::Int64
    - txEventsCount::Int64
    - txId::Int64
    - username::String
"""
Base.@kwdef mutable struct Neo4jCaptureDataChangeMeta <: OpenAPI.APIModel
    operation::Union{Nothing, String} = nothing
    source = nothing # spec type: Union{ Nothing, Neo4jCaptureDataChangeMetaSource }
    timestamp::Union{Nothing, Int64} = nothing
    txEventId::Union{Nothing, Int64} = nothing
    txEventsCount::Union{Nothing, Int64} = nothing
    txId::Union{Nothing, Int64} = nothing
    username::Union{Nothing, String} = nothing

    function Neo4jCaptureDataChangeMeta(operation, source, timestamp, txEventId, txEventsCount, txId, username, )
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("operation"), operation)
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("source"), source)
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("timestamp"), timestamp)
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("txEventId"), txEventId)
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("txEventsCount"), txEventsCount)
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("txId"), txId)
        OpenAPI.validate_property(Neo4jCaptureDataChangeMeta, Symbol("username"), username)
        return new(operation, source, timestamp, txEventId, txEventsCount, txId, username, )
    end
end # type Neo4jCaptureDataChangeMeta

const _property_types_Neo4jCaptureDataChangeMeta = Dict{Symbol,String}(Symbol("operation")=>"String", Symbol("source")=>"Neo4jCaptureDataChangeMetaSource", Symbol("timestamp")=>"Int64", Symbol("txEventId")=>"Int64", Symbol("txEventsCount")=>"Int64", Symbol("txId")=>"Int64", Symbol("username")=>"String", )
OpenAPI.property_type(::Type{ Neo4jCaptureDataChangeMeta }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Neo4jCaptureDataChangeMeta[name]))}

function check_required(o::Neo4jCaptureDataChangeMeta)
    o.operation === nothing && (return false)
    o.source === nothing && (return false)
    o.timestamp === nothing && (return false)
    o.txEventId === nothing && (return false)
    o.txEventsCount === nothing && (return false)
    o.txId === nothing && (return false)
    o.username === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Neo4jCaptureDataChangeMeta }, name::Symbol, val)
end
