// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * API version: 0.1.0
 */

package MindWM


import (
	"time"
)



type IoDocument struct {

	// Identifies the event.
	Id string `json:"id"`

	Source string `json:"source"`

	// The version of the CloudEvents specification which the event uses.
	Specversion string `json:"specversion"`

	Type string `json:"type"`

	// Content type of the data value. Must adhere to RFC 2046 format.
	Datacontenttype string `json:"datacontenttype,omitempty"`

	// Identifies the schema that data adheres to.
	Dataschema string `json:"dataschema,omitempty"`

	Subject string `json:"subject,omitempty"`

	// Timestamp of when the occurrence happened. Must adhere to RFC 3339.
	Time time.Time `json:"time,omitempty"`

	Data TmuxPaneIoDocument `json:"data,omitempty"`

	// Base64 encoded event payload. Must adhere to RFC4648.
	DataBase64 string `json:"data_base64,omitempty"`
}

// AssertIoDocumentRequired checks if the required fields are not zero-ed
func AssertIoDocumentRequired(obj IoDocument) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"source": obj.Source,
		"specversion": obj.Specversion,
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertIoDocumentConstraints checks if the values respects the defined constraints
func AssertIoDocumentConstraints(obj IoDocument) error {
	return nil
}
