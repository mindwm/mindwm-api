// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * API version: 0.1.0
 */

package MindwWM




type Neo4jCaptureDataChangeMeta struct {

	Operation string `json:"operation"`

	Source Neo4jCaptureDataChangeMetaSource `json:"source"`

	Timestamp int32 `json:"timestamp"`

	TxEventId int32 `json:"txEventId"`

	TxEventsCount int32 `json:"txEventsCount"`

	TxId int32 `json:"txId"`

	Username string `json:"username"`
}

// AssertNeo4jCaptureDataChangeMetaRequired checks if the required fields are not zero-ed
func AssertNeo4jCaptureDataChangeMetaRequired(obj Neo4jCaptureDataChangeMeta) error {
	elements := map[string]interface{}{
		"operation": obj.Operation,
		"source": obj.Source,
		"timestamp": obj.Timestamp,
		"txEventId": obj.TxEventId,
		"txEventsCount": obj.TxEventsCount,
		"txId": obj.TxId,
		"username": obj.Username,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNeo4jCaptureDataChangeMetaSourceRequired(obj.Source); err != nil {
		return err
	}
	return nil
}

// AssertNeo4jCaptureDataChangeMetaConstraints checks if the values respects the defined constraints
func AssertNeo4jCaptureDataChangeMetaConstraints(obj Neo4jCaptureDataChangeMeta) error {
	if err := AssertNeo4jCaptureDataChangeMetaSourceConstraints(obj.Source); err != nil {
		return err
	}
	return nil
}
