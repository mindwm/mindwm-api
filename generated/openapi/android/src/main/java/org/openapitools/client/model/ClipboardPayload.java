/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.ClipboardPayloadContext;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ClipboardPayload {
  
  @SerializedName("start")
  private List<Integer> start = null;
  @SerializedName("stop")
  private List<Integer> stop = null;
  @SerializedName("data")
  private String data = null;
  public enum TypeEnum {
     primary,  secondary,  clipboard, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("context")
  private ClipboardPayloadContext context = null;

  /**
   * Starting position of clipboard selection [x,y]
   **/
  @ApiModelProperty(value = "Starting position of clipboard selection [x,y]")
  public List<Integer> getStart() {
    return start;
  }
  public void setStart(List<Integer> start) {
    this.start = start;
  }

  /**
   * Ending position of clipboard selection [x,y]
   **/
  @ApiModelProperty(value = "Ending position of clipboard selection [x,y]")
  public List<Integer> getStop() {
    return stop;
  }
  public void setStop(List<Integer> stop) {
    this.stop = stop;
  }

  /**
   * Clipboard data
   **/
  @ApiModelProperty(value = "Clipboard data")
  public String getData() {
    return data;
  }
  public void setData(String data) {
    this.data = data;
  }

  /**
   * Clipboard type
   **/
  @ApiModelProperty(value = "Clipboard type")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ClipboardPayloadContext getContext() {
    return context;
  }
  public void setContext(ClipboardPayloadContext context) {
    this.context = context;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClipboardPayload clipboardPayload = (ClipboardPayload) o;
    return (this.start == null ? clipboardPayload.start == null : this.start.equals(clipboardPayload.start)) &&
        (this.stop == null ? clipboardPayload.stop == null : this.stop.equals(clipboardPayload.stop)) &&
        (this.data == null ? clipboardPayload.data == null : this.data.equals(clipboardPayload.data)) &&
        (this.type == null ? clipboardPayload.type == null : this.type.equals(clipboardPayload.type)) &&
        (this.context == null ? clipboardPayload.context == null : this.context.equals(clipboardPayload.context));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.start == null ? 0: this.start.hashCode());
    result = 31 * result + (this.stop == null ? 0: this.stop.hashCode());
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.context == null ? 0: this.context.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClipboardPayload {\n");
    
    sb.append("  start: ").append(start).append("\n");
    sb.append("  stop: ").append(stop).append("\n");
    sb.append("  data: ").append(data).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  context: ").append(context).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
