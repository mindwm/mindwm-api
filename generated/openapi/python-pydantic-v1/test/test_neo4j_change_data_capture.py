# coding: utf-8

"""
    Mindwm API

    This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from MindWM.models.neo4j_change_data_capture import Neo4jChangeDataCapture  # noqa: E501

class TestNeo4jChangeDataCapture(unittest.TestCase):
    """Neo4jChangeDataCapture unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Neo4jChangeDataCapture:
        """Test Neo4jChangeDataCapture
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Neo4jChangeDataCapture`
        """
        model = Neo4jChangeDataCapture()  # noqa: E501
        if include_optional:
            return Neo4jChangeDataCapture(
                headers = {
                    'key' : null
                    },
                message_key = '',
                meta = MindWM.models.neo4j_change_data_capture_meta.Neo4jChangeDataCapture_meta(
                    operation = '', 
                    source = MindWM.models.neo4j_change_data_capture_meta_source.Neo4jChangeDataCapture_meta_source(
                        hostname = '', ), 
                    timestamp = 56, 
                    tx_event_id = 56, 
                    tx_events_count = 56, 
                    tx_id = 56, 
                    username = '', ),
                offset = 56,
                partition = 56,
                source_type = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                topic = '',
                var_schema = MindWM.models.neo4j_change_data_capture_schema.Neo4jChangeDataCapture_schema(
                    constraints = {
                        'key' : null
                        }, 
                    properties = {
                        'key' : null
                        }, ),
                payload = MindWM.models.neo4j_change_data_capture_payload.Neo4jChangeDataCapture_payload()
            )
        else:
            return Neo4jChangeDataCapture(
                headers = {
                    'key' : null
                    },
                message_key = '',
                meta = MindWM.models.neo4j_change_data_capture_meta.Neo4jChangeDataCapture_meta(
                    operation = '', 
                    source = MindWM.models.neo4j_change_data_capture_meta_source.Neo4jChangeDataCapture_meta_source(
                        hostname = '', ), 
                    timestamp = 56, 
                    tx_event_id = 56, 
                    tx_events_count = 56, 
                    tx_id = 56, 
                    username = '', ),
                offset = 56,
                partition = 56,
                source_type = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                topic = '',
                var_schema = MindWM.models.neo4j_change_data_capture_schema.Neo4jChangeDataCapture_schema(
                    constraints = {
                        'key' : null
                        }, 
                    properties = {
                        'key' : null
                        }, ),
                payload = MindWM.models.neo4j_change_data_capture_payload.Neo4jChangeDataCapture_payload(),
        )
        """

    def testNeo4jChangeDataCapture(self):
        """Test Neo4jChangeDataCapture"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
