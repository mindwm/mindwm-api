/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Neo4jCaptureDataChangeRelationshipPayload.h
 *
 * 
 */

#ifndef Neo4jCaptureDataChangeRelationshipPayload_H_
#define Neo4jCaptureDataChangeRelationshipPayload_H_



#include "Neo4jCaptureDataChangeRelationshipPayload_end.h"
#include <string>
#include "Object.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Neo4jCaptureDataChangeRelationshipPayload 
{
public:
    Neo4jCaptureDataChangeRelationshipPayload() = default;
    explicit Neo4jCaptureDataChangeRelationshipPayload(boost::property_tree::ptree const& pt);
    virtual ~Neo4jCaptureDataChangeRelationshipPayload() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// Neo4jCaptureDataChangeRelationshipPayload members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getAfter() const;
    void setAfter(std::shared_ptr<Object> value);

    /// <summary>
    /// 
    /// </summary>
    std::string getBefore() const;
    void setBefore(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Neo4jCaptureDataChangeRelationshipPayload_end> getEnd() const;
    void setEnd(std::shared_ptr<Neo4jCaptureDataChangeRelationshipPayload_end> value);

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getLabel() const;
    void setLabel(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Neo4jCaptureDataChangeRelationshipPayload_end> getStart() const;
    void setStart(std::shared_ptr<Neo4jCaptureDataChangeRelationshipPayload_end> value);

    /// <summary>
    /// 
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    std::shared_ptr<Object> m_After = nullptr;
    std::string m_Before = "";
    std::shared_ptr<Neo4jCaptureDataChangeRelationshipPayload_end> m_End;
    std::string m_Id = "";
    std::string m_Label = "";
    std::shared_ptr<Neo4jCaptureDataChangeRelationshipPayload_end> m_Start;
    std::string m_Type = "";
};

std::vector<Neo4jCaptureDataChangeRelationshipPayload> createNeo4jCaptureDataChangeRelationshipPayloadVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* Neo4jCaptureDataChangeRelationshipPayload_H_ */
