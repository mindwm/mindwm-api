//
// Neo4jCaptureDataChangeMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Neo4jCaptureDataChangeMeta: Codable, JSONEncodable, Hashable {

    public var operation: String
    public var source: Neo4jCaptureDataChangeMetaSource
    public var timestamp: Int
    public var txEventId: Int
    public var txEventsCount: Int
    public var txId: Int
    public var username: String

    public init(operation: String, source: Neo4jCaptureDataChangeMetaSource, timestamp: Int, txEventId: Int, txEventsCount: Int, txId: Int, username: String) {
        self.operation = operation
        self.source = source
        self.timestamp = timestamp
        self.txEventId = txEventId
        self.txEventsCount = txEventsCount
        self.txId = txId
        self.username = username
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case operation
        case source
        case timestamp
        case txEventId
        case txEventsCount
        case txId
        case username
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(operation, forKey: .operation)
        try container.encode(source, forKey: .source)
        try container.encode(timestamp, forKey: .timestamp)
        try container.encode(txEventId, forKey: .txEventId)
        try container.encode(txEventsCount, forKey: .txEventsCount)
        try container.encode(txId, forKey: .txId)
        try container.encode(username, forKey: .username)
    }
}

