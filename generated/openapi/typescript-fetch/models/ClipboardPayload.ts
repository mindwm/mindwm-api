/* tslint:disable */
/* eslint-disable */
/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClipboardPayloadContext } from './ClipboardPayloadContext';
import {
    ClipboardPayloadContextFromJSON,
    ClipboardPayloadContextFromJSONTyped,
    ClipboardPayloadContextToJSON,
} from './ClipboardPayloadContext';

/**
 * 
 * @export
 * @interface ClipboardPayload
 */
export interface ClipboardPayload {
    /**
     * Starting position of clipboard selection [x,y]
     * @type {Array<number>}
     * @memberof ClipboardPayload
     */
    start?: Array<number>;
    /**
     * Ending position of clipboard selection [x,y]
     * @type {Array<number>}
     * @memberof ClipboardPayload
     */
    stop?: Array<number>;
    /**
     * Clipboard data
     * @type {string}
     * @memberof ClipboardPayload
     */
    data?: string;
    /**
     * Clipboard type
     * @type {string}
     * @memberof ClipboardPayload
     */
    type?: ClipboardPayloadTypeEnum;
    /**
     * 
     * @type {ClipboardPayloadContext}
     * @memberof ClipboardPayload
     */
    context?: ClipboardPayloadContext;
}


/**
 * @export
 */
export const ClipboardPayloadTypeEnum = {
    Primary: 'primary',
    Secondary: 'secondary',
    Clipboard: 'clipboard'
} as const;
export type ClipboardPayloadTypeEnum = typeof ClipboardPayloadTypeEnum[keyof typeof ClipboardPayloadTypeEnum];


/**
 * Check if a given object implements the ClipboardPayload interface.
 */
export function instanceOfClipboardPayload(value: object): value is ClipboardPayload {
    return true;
}

export function ClipboardPayloadFromJSON(json: any): ClipboardPayload {
    return ClipboardPayloadFromJSONTyped(json, false);
}

export function ClipboardPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClipboardPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'start': json['start'] == null ? undefined : json['start'],
        'stop': json['stop'] == null ? undefined : json['stop'],
        'data': json['data'] == null ? undefined : json['data'],
        'type': json['type'] == null ? undefined : json['type'],
        'context': json['context'] == null ? undefined : ClipboardPayloadContextFromJSON(json['context']),
    };
}

export function ClipboardPayloadToJSON(value?: ClipboardPayload | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'start': value['start'],
        'stop': value['stop'],
        'data': value['data'],
        'type': value['type'],
        'context': ClipboardPayloadContextToJSON(value['context']),
    };
}

