# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from MindWM.models.base_model import Model
from MindWM import util


class Neo4jCaptureDataChangeSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constraints: Dict[str, object]=None, properties: Dict[str, object]=None):
        """Neo4jCaptureDataChangeSchema - a model defined in OpenAPI

        :param constraints: The constraints of this Neo4jCaptureDataChangeSchema.
        :param properties: The properties of this Neo4jCaptureDataChangeSchema.
        """
        self.openapi_types = {
            'constraints': Dict[str, object],
            'properties': Dict[str, object]
        }

        self.attribute_map = {
            'constraints': 'constraints',
            'properties': 'properties'
        }

        self._constraints = constraints
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Neo4jCaptureDataChangeSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Neo4jCaptureDataChange_schema of this Neo4jCaptureDataChangeSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constraints(self):
        """Gets the constraints of this Neo4jCaptureDataChangeSchema.


        :return: The constraints of this Neo4jCaptureDataChangeSchema.
        :rtype: Dict[str, object]
        """
        return self._constraints

    @constraints.setter
    def constraints(self, constraints):
        """Sets the constraints of this Neo4jCaptureDataChangeSchema.


        :param constraints: The constraints of this Neo4jCaptureDataChangeSchema.
        :type constraints: Dict[str, object]
        """

        self._constraints = constraints

    @property
    def properties(self):
        """Gets the properties of this Neo4jCaptureDataChangeSchema.


        :return: The properties of this Neo4jCaptureDataChangeSchema.
        :rtype: Dict[str, object]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Neo4jCaptureDataChangeSchema.


        :param properties: The properties of this Neo4jCaptureDataChangeSchema.
        :type properties: Dict[str, object]
        """

        self._properties = properties
