/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CloudEvent_data.h
 *
 * The event payload.
 */

#ifndef CloudEvent_data_H_
#define CloudEvent_data_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// The event payload.
/// </summary>
class  CloudEvent_data 
{
public:
    CloudEvent_data() = default;
    explicit CloudEvent_data(boost::property_tree::ptree const& pt);
    virtual ~CloudEvent_data() = default;

    CloudEvent_data(const CloudEvent_data& other) = default; // copy constructor
    CloudEvent_data(CloudEvent_data&& other) noexcept = default; // move constructor

    CloudEvent_data& operator=(const CloudEvent_data& other) = default; // copy assignment
    CloudEvent_data& operator=(CloudEvent_data&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CloudEvent_data members

protected:
};

std::vector<CloudEvent_data> createCloudEvent_dataVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CloudEvent_data>(const CloudEvent_data& val) {
    return val.toPropertyTree();
}

template<>
inline CloudEvent_data fromPt<CloudEvent_data>(const boost::property_tree::ptree& pt) {
    CloudEvent_data ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CloudEvent_data_H_ */
