/*
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * CloudEvents Specification JSON Schema
 */
public class OASCloudEvent implements OAS.MappedProperties {
    /**
     * Identifies the event.
     * @return id
     */
    public String id { get; set; }

    /**
     * Identifies the context in which an event happened.
     * @return source
     */
    public String source { get; set; }

    /**
     * The version of the CloudEvents specification which the event uses.
     * @return specversion
     */
    public String specversion { get; set; }

    /**
     * Describes the type of event related to the originating occurrence.
     * @return type
     */
    public String type { get; set; }

    /**
     * Content type of the data value. Must adhere to RFC 2046 format.
     * @return datacontenttype
     */
    public String datacontenttype { get; set; }

    /**
     * Identifies the schema that data adheres to.
     * @return dataschema
     */
    public String dataschema { get; set; }

    /**
     * Describes the subject of the event in the context of the event producer (identified by source).
     * @return subject
     */
    public String subject { get; set; }

    /**
     * Timestamp of when the occurrence happened. Must adhere to RFC 3339.
     * @return r_time
     */
    public Datetime r_time { get; set; }

    /**
     * Get data
     * @return data
     */
    public OASCloudEventData data { get; set; }

    /**
     * Base64 encoded event payload. Must adhere to RFC4648.
     * @return dataBase64
     */
    public String dataBase64 { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time' => 'r_time',
        'data_base64' => 'dataBase64'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time' => 'r_time',
        'data_base64' => 'dataBase64'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCloudEvent getExample() {
        OASCloudEvent cloudEvent = new OASCloudEvent();
          cloudEvent.id = '';
          cloudEvent.source = '';
          cloudEvent.specversion = '';
          cloudEvent.type = '';
          cloudEvent.datacontenttype = '';
          cloudEvent.dataschema = '';
          cloudEvent.subject = '';
          cloudEvent.r_time = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          cloudEvent.data = OASCloudEventData.getExample();
          cloudEvent.dataBase64 = '';
        return cloudEvent;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCloudEvent) {           
            OASCloudEvent cloudEvent = (OASCloudEvent) obj;
            return this.id == cloudEvent.id
                && this.source == cloudEvent.source
                && this.specversion == cloudEvent.specversion
                && this.type == cloudEvent.type
                && this.datacontenttype == cloudEvent.datacontenttype
                && this.dataschema == cloudEvent.dataschema
                && this.subject == cloudEvent.subject
                && this.r_time == cloudEvent.r_time
                && this.data == cloudEvent.data
                && this.dataBase64 == cloudEvent.dataBase64;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (source == null ? 0 : System.hashCode(source));
        hashCode = (17 * hashCode) + (specversion == null ? 0 : System.hashCode(specversion));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (datacontenttype == null ? 0 : System.hashCode(datacontenttype));
        hashCode = (17 * hashCode) + (dataschema == null ? 0 : System.hashCode(dataschema));
        hashCode = (17 * hashCode) + (subject == null ? 0 : System.hashCode(subject));
        hashCode = (17 * hashCode) + (r_time == null ? 0 : System.hashCode(r_time));
        hashCode = (17 * hashCode) + (data == null ? 0 : System.hashCode(data));
        hashCode = (17 * hashCode) + (dataBase64 == null ? 0 : System.hashCode(dataBase64));
        return hashCode;
    }
}

