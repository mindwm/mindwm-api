{
  "namespace": "MindWM",
  "type": "record",
  "doc": "",
  "name": "IoDocumentEvent",
  "fields": [
    {
      "name": "id",
      "type": "string",
      "doc": "Identifies the event."
    },
    {
      "name": "source",
      "type": "string",
      "doc": ""
    },
    {
      "name": "specversion",
      "type": "string",
      "doc": "The version of the CloudEvents specification which the event uses."
    },
    {
      "name": "type",
      "type": "string",
      "doc": ""
    },
    {
      "name": "datacontenttype",
      "type": ["null", "string"],
      "doc": "Content type of the data value. Must adhere to RFC 2046 format.",
      "default": null
    },
    {
      "name": "dataschema",
      "type": ["null", "string"],
      "doc": "Identifies the schema that data adheres to.",
      "default": null
    },
    {
      "name": "subject",
      "type": ["null", "string"],
      "doc": "",
      "default": null
    },
    {
      "name": "time",
      "type": ["null", "string"],
      "doc": "Timestamp of when the occurrence happened. Must adhere to RFC 3339.",
      "default": null
    },
    {
      "name": "data",
      "type": ["null", "MindWM.IoDocument"],
      "doc": "",
      "default": null
    },
    {
      "name": "data_base64",
      "type": ["null", "string"],
      "doc": "Base64 encoded event payload. Must adhere to RFC4648.",
      "default": null
    },
    {
      "name": "knativebrokerttl",
      "type": ["null", "string"],
      "doc": "knative broker ttl, workaround for https://github.com/knative-extensions/eventing-natss/issues/518",
      "default": null
    }
  ]

}
