/**
* Mindwm API
* This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
*
* The version of the OpenAPI document: 0.1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Neo4jCaptureDataChange_meta_source.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Neo4jCaptureDataChange_meta_source::Neo4jCaptureDataChange_meta_source()
{
    m_Hostname = "";
    
}

void Neo4jCaptureDataChange_meta_source::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Neo4jCaptureDataChange_meta_source::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Neo4jCaptureDataChange_meta_source::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Neo4jCaptureDataChange_meta_source" : pathPrefix;

        
    return success;
}

bool Neo4jCaptureDataChange_meta_source::operator==(const Neo4jCaptureDataChange_meta_source& rhs) const
{
    return
    
    
    (getHostname() == rhs.getHostname())
    
    
    ;
}

bool Neo4jCaptureDataChange_meta_source::operator!=(const Neo4jCaptureDataChange_meta_source& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Neo4jCaptureDataChange_meta_source& o)
{
    j = nlohmann::json::object();
    j["hostname"] = o.m_Hostname;
    
}

void from_json(const nlohmann::json& j, Neo4jCaptureDataChange_meta_source& o)
{
    j.at("hostname").get_to(o.m_Hostname);
    
}

std::string Neo4jCaptureDataChange_meta_source::getHostname() const
{
    return m_Hostname;
}
void Neo4jCaptureDataChange_meta_source::setHostname(std::string const& value)
{
    m_Hostname = value;
}


} // namespace org::openapitools::server::model

