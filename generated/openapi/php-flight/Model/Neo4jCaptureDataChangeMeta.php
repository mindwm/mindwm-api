<?php
/**
 * Neo4jCaptureDataChangeMeta
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the Neo4jCaptureDataChangeMeta model.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class Neo4jCaptureDataChangeMeta  implements \JsonSerializable
{
        /**
     * @var string
     * @SerializedName("operation")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $operation;

    /**
     * @var Neo4jCaptureDataChangeMetaSource
     * @SerializedName("source")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\OpenAPIServer\Model\Neo4jCaptureDataChangeMetaSource")
     * @Type("\OpenAPIServer\Model\Neo4jCaptureDataChangeMetaSource")
     */
    public Neo4jCaptureDataChangeMetaSource $source;

    /**
     * @var int
     * @SerializedName("timestamp")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $timestamp;

    /**
     * @var int
     * @SerializedName("txEventId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $txEventId;

    /**
     * @var int
     * @SerializedName("txEventsCount")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $txEventsCount;

    /**
     * @var int
     * @SerializedName("txId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $txId;

    /**
     * @var string
     * @SerializedName("username")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $username;

    /**
     * Constructor
     *
     * @param string $operation
     * @param Neo4jCaptureDataChangeMetaSource $source
     * @param int $timestamp
     * @param int $txEventId
     * @param int $txEventsCount
     * @param int $txId
     * @param string $username
     */
    public function __construct(string $operation, Neo4jCaptureDataChangeMetaSource $source, int $timestamp, int $txEventId, int $txEventsCount, int $txId, string $username)
    {
        $this->operation = $operation;
        $this->source = $source;
        $this->timestamp = $timestamp;
        $this->txEventId = $txEventId;
        $this->txEventsCount = $txEventsCount;
        $this->txId = $txId;
        $this->username = $username;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['operation'] ?? null, 
            isset($data['source']) ? Neo4jCaptureDataChangeMetaSource::fromArray($data['source']) : null, 
            $data['timestamp'] ?? null, 
            $data['txEventId'] ?? null, 
            $data['txEventsCount'] ?? null, 
            $data['txId'] ?? null, 
            $data['username'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'operation' => $this->operation, 
            'source' => $this->source, 
            'timestamp' => $this->timestamp, 
            'txEventId' => $this->txEventId, 
            'txEventsCount' => $this->txEventsCount, 
            'txId' => $this->txId, 
            'username' => $this->username, 
        ];
    }
}


