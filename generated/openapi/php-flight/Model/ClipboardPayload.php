<?php
/**
 * ClipboardPayload
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the ClipboardPayload model.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class ClipboardPayload  implements \JsonSerializable
{
        /**
     * Starting position of clipboard selection [x,y]
     *
     * @var int[]|null
     * @SerializedName("start")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     * @Assert\Count(
     *   max = 2
     * )
     * @Assert\Count(
     *   min = 2
     * )
     */
    public ?array $start;

    /**
     * Ending position of clipboard selection [x,y]
     *
     * @var int[]|null
     * @SerializedName("stop")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     * @Assert\Count(
     *   max = 2
     * )
     * @Assert\Count(
     *   min = 2
     * )
     */
    public ?array $stop;

    /**
     * Clipboard data
     *
     * @var string|null
     * @SerializedName("data")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    public ?string $data;

    /**
     * @var ClipboardPayloadType|null
     * @SerializedName("type")
        * @Accessor(getter="getSerializedType")
        * @Type("string")
     */
    public ?ClipboardPayloadType $type;

    /**
     * @var ClipboardPayloadContext|null
     * @SerializedName("context")
     * @Assert\Type("\OpenAPIServer\Model\ClipboardPayloadContext")
     * @Type("\OpenAPIServer\Model\ClipboardPayloadContext")
     */
    public ?ClipboardPayloadContext $context;

    /**
     * Constructor
     *
     * @param int[]|null $start
     * @param int[]|null $stop
     * @param string|null $data
     * @param ClipboardPayloadType|null $type
     * @param ClipboardPayloadContext|null $context
     */
    public function __construct(?array $start, ?array $stop, ?string $data, ?ClipboardPayloadType $type, ?ClipboardPayloadContext $context)
    {
        $this->start = $start;
        $this->stop = $stop;
        $this->data = $data;
        $this->type = $type;
        $this->context = $context;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['start'] ?? null, 
            $data['stop'] ?? null, 
            $data['data'] ?? null, 
            isset($data['type']) ? ClipboardPayloadType::tryFrom($data['type']) : null, 
            isset($data['context']) ? ClipboardPayloadContext::fromArray($data['context']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'start' => $this->start, 
            'stop' => $this->stop, 
            'data' => $this->data, 
            'type' => $this->type, 
            'context' => $this->context, 
        ];
    }
}


