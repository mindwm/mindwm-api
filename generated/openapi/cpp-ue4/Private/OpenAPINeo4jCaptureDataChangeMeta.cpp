/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPINeo4jCaptureDataChangeMeta.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPINeo4jCaptureDataChangeMeta::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("operation")); WriteJsonValue(Writer, Operation);
	Writer->WriteIdentifierPrefix(TEXT("source")); WriteJsonValue(Writer, Source);
	Writer->WriteIdentifierPrefix(TEXT("timestamp")); WriteJsonValue(Writer, Timestamp);
	Writer->WriteIdentifierPrefix(TEXT("txEventId")); WriteJsonValue(Writer, TxEventId);
	Writer->WriteIdentifierPrefix(TEXT("txEventsCount")); WriteJsonValue(Writer, TxEventsCount);
	Writer->WriteIdentifierPrefix(TEXT("txId")); WriteJsonValue(Writer, TxId);
	Writer->WriteIdentifierPrefix(TEXT("username")); WriteJsonValue(Writer, Username);
	Writer->WriteObjectEnd();
}

bool OpenAPINeo4jCaptureDataChangeMeta::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("operation"), Operation);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("source"), Source);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("timestamp"), Timestamp);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("txEventId"), TxEventId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("txEventsCount"), TxEventsCount);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("txId"), TxId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("username"), Username);

	return ParseSuccess;
}

}
