/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TmuxPaneIoDocument model module.
 * @module model/TmuxPaneIoDocument
 * @version 0.1.0
 */
class TmuxPaneIoDocument {
    /**
     * Constructs a new <code>TmuxPaneIoDocument</code>.
     * @alias module:model/TmuxPaneIoDocument
     * @extends Object
     * @param input {String} User input
     * @param output {String} Command output (mix of stdout & stderr)
     * @param ps1 {String} ps1 (prompt) AFTER the input and output
     */
    constructor(input, output, ps1) { 
        
        TmuxPaneIoDocument.initialize(this, input, output, ps1);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, input, output, ps1) { 
        obj['input'] = input;
        obj['output'] = output;
        obj['ps1'] = ps1;
    }

    /**
     * Constructs a <code>TmuxPaneIoDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TmuxPaneIoDocument} obj Optional instance to populate.
     * @return {module:model/TmuxPaneIoDocument} The populated <code>TmuxPaneIoDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TmuxPaneIoDocument();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], 'String');
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = ApiClient.convertToType(data['output'], 'String');
            }
            if (data.hasOwnProperty('ps1')) {
                obj['ps1'] = ApiClient.convertToType(data['ps1'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TmuxPaneIoDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TmuxPaneIoDocument</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TmuxPaneIoDocument.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['input'] && !(typeof data['input'] === 'string' || data['input'] instanceof String)) {
            throw new Error("Expected the field `input` to be a primitive type in the JSON string but got " + data['input']);
        }
        // ensure the json data is a string
        if (data['output'] && !(typeof data['output'] === 'string' || data['output'] instanceof String)) {
            throw new Error("Expected the field `output` to be a primitive type in the JSON string but got " + data['output']);
        }
        // ensure the json data is a string
        if (data['ps1'] && !(typeof data['ps1'] === 'string' || data['ps1'] instanceof String)) {
            throw new Error("Expected the field `ps1` to be a primitive type in the JSON string but got " + data['ps1']);
        }

        return true;
    }


}

TmuxPaneIoDocument.RequiredProperties = ["input", "output", "ps1"];

/**
 * User input
 * @member {String} input
 */
TmuxPaneIoDocument.prototype['input'] = undefined;

/**
 * Command output (mix of stdout & stderr)
 * @member {String} output
 */
TmuxPaneIoDocument.prototype['output'] = undefined;

/**
 * ps1 (prompt) AFTER the input and output
 * @member {String} ps1
 */
TmuxPaneIoDocument.prototype['ps1'] = undefined;






export default TmuxPaneIoDocument;

