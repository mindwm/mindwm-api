/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Neo4jCaptureDataChangeNodePayload from './Neo4jCaptureDataChangeNodePayload';
import Neo4jCaptureDataChangeRelationshipPayload from './Neo4jCaptureDataChangeRelationshipPayload';
import Neo4jCaptureDataChangeRelationshipPayloadEnd from './Neo4jCaptureDataChangeRelationshipPayloadEnd';

/**
 * The Neo4jCaptureDataChangePayload model module.
 * @module model/Neo4jCaptureDataChangePayload
 * @version 0.1.0
 */
class Neo4jCaptureDataChangePayload {
    /**
     * Constructs a new <code>Neo4jCaptureDataChangePayload</code>.
     * @alias module:model/Neo4jCaptureDataChangePayload
     * @param {(module:model/Neo4jCaptureDataChangeNodePayload|module:model/Neo4jCaptureDataChangeRelationshipPayload)} instance The actual instance to initialize Neo4jCaptureDataChangePayload.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "Neo4jCaptureDataChangeNodePayload") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Neo4jCaptureDataChangeNodePayload.validateJSON(instance); // throw an exception if no match
                // create Neo4jCaptureDataChangeNodePayload from JS object
                this.actualInstance = Neo4jCaptureDataChangeNodePayload.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Neo4jCaptureDataChangeNodePayload
            errorMessages.push("Failed to construct Neo4jCaptureDataChangeNodePayload: " + err)
        }

        try {
            if (typeof instance === "Neo4jCaptureDataChangeRelationshipPayload") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Neo4jCaptureDataChangeRelationshipPayload.validateJSON(instance); // throw an exception if no match
                // create Neo4jCaptureDataChangeRelationshipPayload from JS object
                this.actualInstance = Neo4jCaptureDataChangeRelationshipPayload.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Neo4jCaptureDataChangeRelationshipPayload
            errorMessages.push("Failed to construct Neo4jCaptureDataChangeRelationshipPayload: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `Neo4jCaptureDataChangePayload` with oneOf schemas Neo4jCaptureDataChangeNodePayload, Neo4jCaptureDataChangeRelationshipPayload. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `Neo4jCaptureDataChangePayload` with oneOf schemas Neo4jCaptureDataChangeNodePayload, Neo4jCaptureDataChangeRelationshipPayload. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>Neo4jCaptureDataChangePayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Neo4jCaptureDataChangePayload} obj Optional instance to populate.
     * @return {module:model/Neo4jCaptureDataChangePayload} The populated <code>Neo4jCaptureDataChangePayload</code> instance.
     */
    static constructFromObject(data, obj) {
        return new Neo4jCaptureDataChangePayload(data);
    }

    /**
     * Gets the actual instance, which can be <code>Neo4jCaptureDataChangeNodePayload</code>, <code>Neo4jCaptureDataChangeRelationshipPayload</code>.
     * @return {(module:model/Neo4jCaptureDataChangeNodePayload|module:model/Neo4jCaptureDataChangeRelationshipPayload)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Neo4jCaptureDataChangeNodePayload</code>, <code>Neo4jCaptureDataChangeRelationshipPayload</code>.
     * @param {(module:model/Neo4jCaptureDataChangeNodePayload|module:model/Neo4jCaptureDataChangeRelationshipPayload)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = Neo4jCaptureDataChangePayload.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of Neo4jCaptureDataChangePayload from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/Neo4jCaptureDataChangePayload} An instance of Neo4jCaptureDataChangePayload.
     */
    static fromJSON = function(json_string){
        return Neo4jCaptureDataChangePayload.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {Object} after
 */
Neo4jCaptureDataChangePayload.prototype['after'] = undefined;

/**
 * @member {String} before
 */
Neo4jCaptureDataChangePayload.prototype['before'] = undefined;

/**
 * @member {String} id
 */
Neo4jCaptureDataChangePayload.prototype['id'] = undefined;

/**
 * @member {String} type
 */
Neo4jCaptureDataChangePayload.prototype['type'] = undefined;

/**
 * @member {module:model/Neo4jCaptureDataChangeRelationshipPayloadEnd} end
 */
Neo4jCaptureDataChangePayload.prototype['end'] = undefined;

/**
 * @member {String} label
 */
Neo4jCaptureDataChangePayload.prototype['label'] = undefined;

/**
 * @member {module:model/Neo4jCaptureDataChangeRelationshipPayloadEnd} start
 */
Neo4jCaptureDataChangePayload.prototype['start'] = undefined;


Neo4jCaptureDataChangePayload.OneOf = ["Neo4jCaptureDataChangeNodePayload", "Neo4jCaptureDataChangeRelationshipPayload"];

export default Neo4jCaptureDataChangePayload;

