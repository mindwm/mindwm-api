/*
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Neo4jCaptureDataChangeMeta {
    #[serde(rename = "operation")]
    pub operation: String,
    #[serde(rename = "source")]
    pub source: Box<models::Neo4jCaptureDataChangeMetaSource>,
    #[serde(rename = "timestamp")]
    pub timestamp: i32,
    #[serde(rename = "txEventId")]
    pub tx_event_id: i32,
    #[serde(rename = "txEventsCount")]
    pub tx_events_count: i32,
    #[serde(rename = "txId")]
    pub tx_id: i32,
    #[serde(rename = "username")]
    pub username: String,
}

impl Neo4jCaptureDataChangeMeta {
    pub fn new(operation: String, source: models::Neo4jCaptureDataChangeMetaSource, timestamp: i32, tx_event_id: i32, tx_events_count: i32, tx_id: i32, username: String) -> Neo4jCaptureDataChangeMeta {
        Neo4jCaptureDataChangeMeta {
            operation,
            source: Box::new(source),
            timestamp,
            tx_event_id,
            tx_events_count,
            tx_id,
            username,
        }
    }
}

