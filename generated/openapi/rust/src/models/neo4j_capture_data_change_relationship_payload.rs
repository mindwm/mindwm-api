/*
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Neo4jCaptureDataChangeRelationshipPayload {
    #[serde(rename = "after")]
    pub after: serde_json::Value,
    #[serde(rename = "before")]
    pub before: String,
    #[serde(rename = "end")]
    pub end: Box<models::Neo4jCaptureDataChangeRelationshipPayloadEnd>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "label")]
    pub label: String,
    #[serde(rename = "start")]
    pub start: Box<models::Neo4jCaptureDataChangeRelationshipPayloadEnd>,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl Neo4jCaptureDataChangeRelationshipPayload {
    pub fn new(after: serde_json::Value, before: String, end: models::Neo4jCaptureDataChangeRelationshipPayloadEnd, id: String, label: String, start: models::Neo4jCaptureDataChangeRelationshipPayloadEnd, r#type: String) -> Neo4jCaptureDataChangeRelationshipPayload {
        Neo4jCaptureDataChangeRelationshipPayload {
            after,
            before,
            end: Box::new(end),
            id,
            label,
            start: Box::new(start),
            r#type,
        }
    }
}

