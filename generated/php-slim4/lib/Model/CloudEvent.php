<?php

/**
 * Mindwm API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\BaseModel;

/**
 * CloudEvent
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class CloudEvent extends BaseModel
{
    /**
     * @var string Models namespace.
     * Can be required for data deserialization when model contains referenced schemas.
     */
    protected const MODELS_NAMESPACE = '\OpenAPIServer\Model';

    /**
     * @var string Constant with OAS schema of current class.
     * Should be overwritten by inherited class.
     */
    protected const MODEL_SCHEMA = <<<'SCHEMA'
{
  "required" : [ "id", "source", "specversion", "type" ],
  "properties" : {
    "id" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Identifies the event."
    },
    "source" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Identifies the context in which an event happened.",
      "format" : "uri-reference"
    },
    "specversion" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "The version of the CloudEvents specification which the event uses."
    },
    "type" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Describes the type of event related to the originating occurrence."
    },
    "datacontenttype" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Content type of the data value. Must adhere to RFC 2046 format.",
      "nullable" : true
    },
    "dataschema" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Identifies the schema that data adheres to.",
      "format" : "uri",
      "nullable" : true
    },
    "subject" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Describes the subject of the event in the context of the event producer (identified by source).",
      "nullable" : true
    },
    "time" : {
      "minLength" : 1,
      "type" : "string",
      "description" : "Timestamp of when the occurrence happened. Must adhere to RFC 3339.",
      "format" : "date-time",
      "nullable" : true
    },
    "data" : {
      "$ref" : "#/components/schemas/CloudEvent_data"
    },
    "data_base64" : {
      "type" : "string",
      "description" : "Base64 encoded event payload. Must adhere to RFC4648.",
      "nullable" : true
    }
  },
  "description" : "CloudEvents Specification JSON Schema",
  "discrimniator" : "type"
}
SCHEMA;
}
