<?php
/**
 * TmuxPaneIoDocument
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mindwm API
 *
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the TmuxPaneIoDocument model.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class TmuxPaneIoDocument  implements \JsonSerializable
{
        /**
     * User input
     *
     * @var string
     * @SerializedName("input")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    public string $input;

    /**
     * Command output (mix of stdout &amp; stderr)
     *
     * @var string
     * @SerializedName("output")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 0
     * )
     */
    public string $output;

    /**
     * ps1 (prompt) AFTER the input and output
     *
     * @var string
     * @SerializedName("ps1")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    public string $ps1;

    /**
     * Constructor
     *
     * @param string $input
     * @param string $output
     * @param string $ps1
     */
    public function __construct(string $input, string $output, string $ps1)
    {
        $this->input = $input;
        $this->output = $output;
        $this->ps1 = $ps1;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['input'] ?? null, 
            $data['output'] ?? null, 
            $data['ps1'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'input' => $this->input, 
            'output' => $this->output, 
            'ps1' => $this->ps1, 
        ];
    }
}


