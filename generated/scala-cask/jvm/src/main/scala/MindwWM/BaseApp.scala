//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.9.2"
//> using lib "com.lihaoyi::scalatags:0.8.2"
/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * OpenAPI spec version: 0.1.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// this file was generated from app.mustache
package MindwWM

import _root_.MindwWM.model.*
import _root_.MindwWM.api.*

/**
 * This class was created with the intention of being extended by some runnable object,
 * passing in the custom business logic services
 */
class BaseApp(    override val port : Int = sys.env.get("PORT").map(_.toInt).getOrElse(8080)) extends cask.MainRoutes with AppRoutes {

    /** routes for the UI
     * Subclasses can override to turn this off
     */
    def openApiRoute: Option[cask.Routes] = Option(OpenApiRoutes(port))

    override def allRoutes = appRoutes ++ openApiRoute

        // no operations!

    override def host: String = "0.0.0.0"

    def start() = locally {
        initialize()
        println(box(s""" ðŸš€ browse to localhost:$port ðŸš€
        |      host : $host
        |      port : $port
        |   verbose : $verbose
        | debugMode : $debugMode
        |""".stripMargin))

        // if java.awt.Desktop.isDesktopSupported then {
        //    java.awt.Desktop.getDesktop.browse(new java.net.URI(s"http://localhost:${port}"))
        // }
    }
}
