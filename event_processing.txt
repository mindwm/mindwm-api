JetStreamChannel: 'KN_USER_{{ USER }}__{{ HOST }}_BROKER_KNE_TRIGGER' #example: KN_USER_ALICE__LAPTOP_BROKER_KNE_TRIGGER
    in_topic: 'user-{{ user }}.{{ host }}-broker-kne-trigger._knative'  # example user-alice.laptop-broker-kne-trigger._knative
    out_topic: 'org.mindwm.manager.{{ user }}.{{ host }}.>' # example: org.mindwm.manager.alice.laptop.>
   
# knative event routing
Forward cloudevents from HostBroker(nats.out_topic) to ContextBroker:
    - any:
      - exact:
          type: iodocument
      - exact:
          type: touch
      - exact:
          type: clipboard
Forward cloudevents from ContextBroker in to HostBroker
    - any:
        - cesql: source LIKE 'org.mindwm.graph.%' # example org.mindwm.graph.node or org.mindwm.graph.node.relationship
        - cesql: subject LIKE 'org.mindwm.manager.{{ user }}.%' # example org.mindwm.manager.alice.....
       
Forward cloudevents from HostBroker to nats.in_topic
    - any:
        - cesql: source LIKE 'org.mindwm.{{ context_name }}.graph.%' # example org.mindwm.pink.graph.node or org.mindwm.pink.graph.node.relationship
        - cesql: subject LIKE 'org.mindwm.manager.{ user }}.{{ host }}.%' # example org.mindwm.manager.alice.laptop....

Cloudevents examples

Vector -> ContextBroker changes in neo4j graph
    {z
      "source": org.mindwm.{{ context_name }}.graph.(node|relationship) # example org.mindwm.pink.graph.node org.mindwm.pink.graph.relationship
      "type": ["{{ neo4j label }}"] # example iodocument HAS_IODOCUMENT
      "subject": ["created", "deleted", "updated"] 
    }

MindWM.manager -> nats.out_topic
iodocument:
    {
      "source": "org.mindwm.manager.{{ user }}.{{ host }}.tmux.{{ tmux_socket_path_b64 }}.{{ session_id }}.{{ tmux_session_id }}.{{ tmux_pane }}" # example org.mindwm.manager.alice.laptop.tmux.L3RtcC90bXV4LTI1NjYwMDAwNi9kZWZhdWx0.add4fc2a-9848-5989-549c-1542c18c9eab.1.8
      "type": "iodocument"
      "subject": "ip a show" 
    }

Mindwm.manager -> nats.out_topic
clibpoard:
    {
      "source": "org.mindwm.manager.{{ user }}.{{ host }}.clipboard" # example org.mindwm.manager.alice.laptop
      "type": clipboard
      "subject": [ "primary", "secondary" ]
      }

Mindwm.manager -> nats.out_topic
touch:
    {
      "source": "org.mindwm.manager.{{ user }}.{{ host }}" # example org.mindwm.manager.alice.laptop
      "type": "touch"
      "subject": "<free field>"
    } 

mindwm-openai -> tmux feedback
feedback:
    {
      "source": "org.mindwm.{{ context_name }}.knfunc.mindwm-openai" # example org.mindwm.pink.knfunc.mindwm-openai
      "type": LLMAnswer 
      "subject": "org.mindwm.manager.{{ user }}.{{ host }}.tmux.{{ tmux_socket_path_b64 }}.{{ session_id }}.{{ tmux_session_id }}.{{ tmux_pane }}.feedback" 
      data: AnswerPaylod
      
    } 
